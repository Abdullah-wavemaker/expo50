{"version":3,"names":["clone","isEqual","VariableEvents","ModelVariable","_ModelVariable","constructor","config","variable","name","dataSet","paramProvider","isList","twoWayBinding","_defineProperty","invoke","params","onSuccess","onError","result","notify","BEFORE_INVOKE","execute","SUCCESS","error","ERROR","AFTER_INVOKE","invokeOnParamChange","latest","lastParams","Promise","resolve"],"sources":["model-variable.ts"],"sourcesContent":["import { assignIn, clone, isEqual } from 'lodash-es';\nimport { BaseVariable, VariableConfig, VariableEvents } from './base-variable';\nimport { ModelVariable as _ModelVariable } from '@wavemaker/variables/src/model/variable/model-variable';\n\nexport class ModelVariable extends _ModelVariable {\n  config: any;\n  lastParams: any;\n\n  constructor(config: VariableConfig) {\n    const variable = {\n      name: config.name,\n      dataSet: config.paramProvider(),\n      isList: config.isList,\n      twoWayBinding: config.twoWayBinding\n    }\n    super(variable);\n    this.config = config;\n    this.invoke();\n  }\n\n  invoke(params?: any, onSuccess?: Function, onError?: Function) {\n    let result;\n    this.dataSet = this.config.paramProvider();\n    this.notify(VariableEvents.BEFORE_INVOKE, [this, this.dataSet]);\n    try{\n      result = super.execute(params, ()=>{});\n      this.config.onSuccess && this.config.onSuccess(this, this.dataSet);\n      onSuccess && onSuccess(this, this.dataSet);\n      this.notify(VariableEvents.SUCCESS, [this, this.dataSet]);\n    }\n    catch(error){\n      this.config.onError && this.config.onError(this, this.dataSet);\n      onError && onError(this, this.dataSet);\n      this.notify(VariableEvents.ERROR, [this, this.dataSet]);\n    }\n\n    this.notify(VariableEvents.AFTER_INVOKE, [this, this.dataSet]);\n    return result;\n  }\n\n  invokeOnParamChange() {\n    const latest = this.config.paramProvider();\n    if (!isEqual(this.lastParams, latest)) {\n        this.invoke();\n        this.lastParams = clone(latest);\n    }\n    return Promise.resolve(this);\n  }\n}\n"],"mappings":";;;AAAA,SAAmBA,KAAK,EAAEC,OAAO,QAAQ,WAAW;AACpD,SAAuCC,cAAc,QAAQ,iBAAiB;AAC9E,SAASC,aAAa,IAAIC,cAAc,QAAQ,wDAAwD;AAExG,OAAO,MAAMD,aAAa,SAASC,cAAc,CAAC;EAIhDC,WAAWA,CAACC,MAAsB,EAAE;IAClC,MAAMC,QAAQ,GAAG;MACfC,IAAI,EAAEF,MAAM,CAACE,IAAI;MACjBC,OAAO,EAAEH,MAAM,CAACI,aAAa,CAAC,CAAC;MAC/BC,MAAM,EAAEL,MAAM,CAACK,MAAM;MACrBC,aAAa,EAAEN,MAAM,CAACM;IACxB,CAAC;IACD,KAAK,CAACL,QAAQ,CAAC;IAACM,eAAA;IAAAA,eAAA;IAChB,IAAI,CAACP,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACQ,MAAM,CAAC,CAAC;EACf;EAEAA,MAAMA,CAACC,MAAY,EAAEC,SAAoB,EAAEC,OAAkB,EAAE;IAC7D,IAAIC,MAAM;IACV,IAAI,CAACT,OAAO,GAAG,IAAI,CAACH,MAAM,CAACI,aAAa,CAAC,CAAC;IAC1C,IAAI,CAACS,MAAM,CAACjB,cAAc,CAACkB,aAAa,EAAE,CAAC,IAAI,EAAE,IAAI,CAACX,OAAO,CAAC,CAAC;IAC/D,IAAG;MACDS,MAAM,GAAG,KAAK,CAACG,OAAO,CAACN,MAAM,EAAE,MAAI,CAAC,CAAC,CAAC;MACtC,IAAI,CAACT,MAAM,CAACU,SAAS,IAAI,IAAI,CAACV,MAAM,CAACU,SAAS,CAAC,IAAI,EAAE,IAAI,CAACP,OAAO,CAAC;MAClEO,SAAS,IAAIA,SAAS,CAAC,IAAI,EAAE,IAAI,CAACP,OAAO,CAAC;MAC1C,IAAI,CAACU,MAAM,CAACjB,cAAc,CAACoB,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,CAACb,OAAO,CAAC,CAAC;IAC3D,CAAC,CACD,OAAMc,KAAK,EAAC;MACV,IAAI,CAACjB,MAAM,CAACW,OAAO,IAAI,IAAI,CAACX,MAAM,CAACW,OAAO,CAAC,IAAI,EAAE,IAAI,CAACR,OAAO,CAAC;MAC9DQ,OAAO,IAAIA,OAAO,CAAC,IAAI,EAAE,IAAI,CAACR,OAAO,CAAC;MACtC,IAAI,CAACU,MAAM,CAACjB,cAAc,CAACsB,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,CAACf,OAAO,CAAC,CAAC;IACzD;IAEA,IAAI,CAACU,MAAM,CAACjB,cAAc,CAACuB,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI,CAAChB,OAAO,CAAC,CAAC;IAC9D,OAAOS,MAAM;EACf;EAEAQ,mBAAmBA,CAAA,EAAG;IACpB,MAAMC,MAAM,GAAG,IAAI,CAACrB,MAAM,CAACI,aAAa,CAAC,CAAC;IAC1C,IAAI,CAACT,OAAO,CAAC,IAAI,CAAC2B,UAAU,EAAED,MAAM,CAAC,EAAE;MACnC,IAAI,CAACb,MAAM,CAAC,CAAC;MACb,IAAI,CAACc,UAAU,GAAG5B,KAAK,CAAC2B,MAAM,CAAC;IACnC;IACA,OAAOE,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;EAC9B;AACF"}