{"version":3,"names":["isUndefined","isBoolean","isEqual","isObject","isArray","get","set","findIndex","DatasetUtil","isValidDataset","dataSet","isList","getValue","key","index","setValue","value","getTargetNode","options","parentIndex","undefined","path","getItem","setItem","i","innerArray","innerElemindex","getChildDetails","targetNode","addItem","length","splice","removeItem","exactMatch","getValidDataset","getCount","Object","keys"],"sources":["dataset-util.ts"],"sourcesContent":["import { isUndefined, isBoolean, isEqual, isObject, isArray, get, set, findIndex } from \"lodash\";\nexport default class DatasetUtil {\n\n  static isValidDataset(dataSet: any, isList?: boolean) {\n    if (!dataSet || (isList && !isArray(dataSet))) {\n      return false;\n    }\n    return dataSet;\n  }\n\n  static getValue(dataSet: any, key: any, index: any, isList?: boolean) {\n    index = index || 0;\n    return isList ? dataSet[index][key] : dataSet[key];\n  }\n\n  static setValue(dataSet: any, key: any, value: any, isList?: boolean) {\n    if (key && !isList) {\n      dataSet[key] = value;\n    }\n    return dataSet;\n  }\n\n  private static getTargetNode(dataSet: any, options: any) {\n    dataSet = options.parentIndex !== undefined ?  dataSet[options.parentIndex] : dataSet;\n    return get(dataSet, options.path);\n  }\n\n  static getItem(dataSet: any, index: any, isList?: boolean) {\n    return isList ? dataSet[index] : dataSet;\n  }\n\n  static setItem(dataSet: any, i: any, value: any, options?: any) {\n    let index;\n    if (isUndefined(i) || !options.isList) {\n      return dataSet;\n    }\n\n    if (isObject(i)) {\n      index = findIndex(dataSet, i);\n    } else {\n      index = i;\n    }\n\n    if (options.path) {\n      const innerArray = DatasetUtil.getTargetNode(dataSet, options);\n      const innerElemindex = findIndex(innerArray, i);\n      if (innerElemindex > -1) {\n        innerArray[innerElemindex] = value;\n      }\n    } else {\n      if (index > -1) {\n        dataSet[index] = value;\n      }\n    }\n\n    return dataSet;\n  }\n\n  /**\n   * This method is to get target node options like path, parentIndex and isList\n   * Example: if we have parent dataset as object and we are performing operations on inner list then we have to set isList as true.\n   * So finding the target node type and updating the isList option.\n   */\n  static getChildDetails (dataSet: any, options: any, isList: boolean) {\n    let parentIndex, path;\n    if (options && options.path) {\n      path = options.path;\n      let targetNode;\n      if (isList) {\n        parentIndex = options.parentIndex || 0;\n        targetNode =  get(dataSet[parentIndex], options.path);\n      } else {\n        targetNode = get(dataSet, options.path);\n      }\n      isList = targetNode ? isArray(targetNode) ? true : false : true;\n    }\n    return {path, isList, parentIndex};\n  }\n\n  static addItem(dataSet: any, value: any, index: any, options?: any) {\n    if (isUndefined(value) || !options.isList) {\n      return dataSet;\n    }\n\n    if (options.path) {\n      const innerArray = DatasetUtil.getTargetNode(dataSet, options);\n      if (innerArray) {\n        // check for index sanity\n        index = index !== undefined ? index : innerArray.length;\n        innerArray.splice(index, 0, value);\n      } else {\n        options.parentIndex !== undefined ? set(dataSet[options.parentIndex], options.path, [value]) : set(dataSet, options.path, [value]);\n      }\n\n    } else {\n      index = index !== undefined ? index : dataSet.length;\n      dataSet.splice(index, 0, value);\n    }\n\n    return dataSet;\n  }\n\n  /**\n   *\n   * @param dataSet\n   * @param i, can be index value of the object/element in array\n   *      or\n   * the whole object which needs to be removed\n   * @param exactMatch\n   * @returns {any}\n   */\n  static removeItem(dataSet: any, i: any, options: any) {\n    let index, exactMatch;\n    i = i !== undefined ? i : dataSet.length - 1;\n\n    if (isBoolean(options)) {\n      exactMatch = options;\n    }\n    if (isObject(options)) {\n      // @ts-ignore\n      exactMatch = options.exactMatch;\n    }\n\n    if (isObject(i)) {\n      if (options.path) {\n        const innerArray = DatasetUtil.getTargetNode(dataSet, options);\n        const innerElemindex = findIndex(innerArray, i);\n        if (innerElemindex > -1 && (!exactMatch || (exactMatch && isEqual(innerArray[innerElemindex], i)))) {\n          innerArray.splice(innerElemindex, 1);\n        }\n      } else {\n        index = findIndex(dataSet, i);\n        // When exactMatch property is set to true delete only when every property values are same*/\n        if (index > -1 && (!exactMatch || (exactMatch && isEqual(dataSet[index], i)))) {\n          dataSet.splice(index, 1);\n        }\n      }\n    } else {\n      dataSet.splice(i, 1);\n    }\n    return dataSet;\n  }\n\n  static getValidDataset(isList?: boolean) {\n    return isList ? [] : {};\n  }\n\n  static getCount(dataSet: any, isList?: boolean) {\n    return isList ? dataSet.length : Object.keys(dataSet).length;\n  }\n}\n"],"mappings":"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"}