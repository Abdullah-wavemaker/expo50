{"version":3,"names":["React","LinearGradient","ExpoLinearGradient","Image","StyleSheet","View","isEmpty","isNil","isNumber","imageSizeEstimator","AssetConsumer","isFullPathUrl","IMAGE_URL_REGEX","LINEAT_GRADIENT_REGEX","DIMENSION_REGEX","BACKGROUND_POSITION_REGEX","BACKGROUND_SIZE_REGEX","ASSET_CACHE","Component","constructor","props","state","parse","val","arguments","length","undefined","value","splits","split","map","v","trim","angle","locations","endsWith","parseInt","shift","delta","Math","round","tan","PI","abs","end","x","y","start","colors","s","_s$matchAll$next","p","matchAll","next","push","replace","componentDidUpdate","prevProps","prevState","snapshot","setState","render","_this$props$size","_this$props$style","createElement","style","borderWidth","overflow","absoluteFill","middle","flexDirection","justifyContent","alignItems","size","width","position","borderRadius","children","BackgroundComponent","_defineProperty","imageSrc","image","caluculateSize","height","resolveAssetSource","naturalImageWidth","naturalImageHeight","getSize","uri","getDimension","dim","getPosition","result","top","bottom","left","right","getPositionAndSize","_this$props$size2","_this$getGradient","resizeMode","getGradient","repeat","renderLinearGradient","data","psresult","setImage","componentDidMount","setTimeout","_this$props$image","_source","source","startsWith","_this$props$image2","loadAsset","_this$props$image3","renderImage","_psresult$position","_psresult$position2","loadImage","minWidth","minHeight","_gradientData$value","gradientData"],"sources":["background.component.tsx"],"sourcesContent":["import * as React from 'react';\nimport { LinearGradient as ExpoLinearGradient, LinearGradientPoint } from 'expo-linear-gradient';\nimport { Image, StyleSheet, View, ViewStyle } from 'react-native';\nimport { isEmpty, isNil, isNumber, isString } from 'lodash-es';\nimport imageSizeEstimator from '@wavemaker/app-rn-runtime/core/imageSizeEstimator';\nimport { AssetConsumer } from '@wavemaker/app-rn-runtime/core/asset.provider';\nimport { isFullPathUrl } from '@wavemaker/app-rn-runtime/core/utils';\n\nexport interface LinearGradientProps {\n    value: string;\n    children: any;\n    style?: ViewStyle;\n    size?: ViewStyle;\n    position?: ViewStyle;\n    middle?: boolean;\n}\n\nexport interface LinearGradientState {\n    colors: string[];\n    locations: number[];\n    start: LinearGradientPoint;\n    end: LinearGradientPoint;\n}\n\nconst IMAGE_URL_REGEX = /url\\(['|\"]?(.+)['|\"]?\\)$/gi;\nconst LINEAT_GRADIENT_REGEX = /linear-gradient\\((.+)\\)$/gi;\nconst DIMENSION_REGEX = /([0-9%]+)[a-z]*/g;\nconst BACKGROUND_POSITION_REGEX = /([0-9%]+)[a-z]*\\s*([0-9%]+)[a-z]*/g;\nconst BACKGROUND_SIZE_REGEX = /([0-9%]+)[a-z]*\\s*([0-9%]+)[a-z]*/g;\n\nconst ASSET_CACHE = {} as any;\n\nexport class LinearGradient extends React.Component<LinearGradientProps, LinearGradientState> {\n\n    constructor(props: LinearGradientProps) {\n        super(props);\n        this.state = this.parse();\n    }\n\n    parse(val = this.props.value) {\n        let state = {} as LinearGradientState;\n        const splits = val.split(',').map(v => v.trim());\n        let angle = 0;\n        const locations: LinearGradientPoint[] = [];\n        if (splits[0].endsWith('deg')) {\n            angle = (parseInt(splits[0].split('deg')[0]))%360;\n            angle = angle < 0 ? (360 + angle) : angle;\n            splits.shift();\n        }\n        angle += 90;\n        const delta = Math.round(Math.tan((angle * Math.PI) / 180) * 100)/100;\n        if (Math.abs(delta) > 1) {\n            state = {\n                end: {\n                    x: -0.5 / delta + 0.5,\n                    y: 0\n                },\n                start: {\n                    x: 0.5 / delta + 0.5,\n                    y: 1\n                }\n            }  as LinearGradientState;\n        } else {\n            state = {\n                start: {\n                    x: 0,\n                    y: -0.5 * delta + 0.5\n                },\n                end: {\n                    x: 1,\n                    y: 0.5 * delta + 0.5\n                }\n            }  as LinearGradientState;\n        }\n        if (angle >= 270 && angle <= 450) {\n            state = {\n                start : state.end,\n                end: state.start\n            } as LinearGradientState;\n        }\n        state.colors = [];\n        state.locations = [];\n        splits.map(s => {\n            const p = s.matchAll(/\\s*([0-9]+)%/g).next()?.value;\n            if (p) {\n                state.locations.push(parseInt(p[1]) / 100);\n                state.colors.push(s.replace(p[0], ''));\n            } else {\n                state.locations.push(null as any);\n                state.colors.push(s);\n            }\n        });\n        return state;\n    }\n\n    componentDidUpdate(prevProps: Readonly<LinearGradientProps>, prevState: Readonly<{}>, snapshot?: any): void {\n        if (prevProps.value !== this.props.value) {\n            this.setState(this.parse());\n        }\n    }\n    \n\n    public render() {\n        return (\n            <View style={[{borderWidth: 0, overflow: 'hidden'}, StyleSheet.absoluteFill, this.props.style]}>\n                <View style={[\n                    StyleSheet.absoluteFill, this.props.middle ? {\n                        flexDirection: 'row',\n                        justifyContent: 'center',\n                        alignItems: 'center'\n                    } : null]}>\n                    <ExpoLinearGradient\n                        colors={this.state.colors}\n                        locations={this.state.locations}\n                        start={this.state.start}\n                        end={this.state.end}\n                        style={[\n                            this.props.size?.width ? this.props.size : StyleSheet.absoluteFill,\n                            this.props.position,\n                            {position: 'absolute', borderRadius: this.props.style?.borderRadius}\n                        ]}\n                    />\n                </View>\n                {this.props.children}\n            </View>\n        );\n    }\n}\n\nexport interface BackgroundProps {\n    image?: string;\n    position?: string;\n    children?: any;\n    resizeMode?: string;\n    repeat?: string;\n    style?: ViewStyle;\n    size: string;\n}\n\nexport interface BackgroundState {\n    imageSrc: any;\n    naturalImageWidth: number,\n    naturalImageHeight: number\n}\n\nexport class BackgroundComponent extends React.Component<BackgroundProps, BackgroundState> {\n\n    private loadAsset: (path: string) => number | string = null as any;\n\n    constructor(props: BackgroundProps) {\n        super(props);\n        this.state = {\n            imageSrc : this.props.image ? ASSET_CACHE[this.props.image] : undefined\n        } as BackgroundState;\n    }\n\n    public caluculateSize(imageSrc: any) {\n        if (isNumber(imageSrc)) {\n            const {width, height} = Image.resolveAssetSource(imageSrc);\n            this.setState({\n              naturalImageWidth: width,\n              naturalImageHeight: height\n            } as BackgroundState);\n          } else if (!isNil(imageSrc)) {\n            imageSizeEstimator.getSize(imageSrc.uri, (width: number, height: number) => {\n              this.setState({\n                naturalImageWidth: width,\n                naturalImageHeight: height\n              } as BackgroundState);\n            });\n          }\n    }\n\n    getDimension(dim: string) {\n        if (dim) {\n            const value = dim.matchAll(DIMENSION_REGEX).next().value;\n            if (value[1]) {\n                return value[1].endsWith('%') ? value[1] : parseInt(value[1]);\n            }\n        }\n        return null;\n    }\n\n    public getPosition() {\n        const result = {} as ViewStyle;\n        if (!this.props.position) {\n            return result;\n        }\n        const position = this.props.position.split(' ').map(s => s.trim());\n        if (position[0] === 'center') {\n            result.alignItems = 'center';\n        } else if (position[0] === 'top') {\n            result.top = 0;\n        } else if (position[0] === 'bottom') {\n            result.bottom = 0;\n        } else {\n            result.top = this.getDimension(position[0]);\n        }\n        if (position[1] === 'center') {\n            result.justifyContent = 'center';\n        } else if (position[1] === 'left') {\n            result.left = 0;\n        } else if (position[1] === 'bottom') {\n            result.right = 0;\n        } else {\n            result.left = this.getDimension(position[1]);\n        }\n        return result;\n    }\n\n    public getPositionAndSize() {\n        const result: {\n            resizeMode? : string,\n            position?: ViewStyle,\n            size?: ViewStyle\n        } = {} as any;\n        if (this.props.resizeMode) {\n            result.resizeMode = this.props.resizeMode;\n            return result;\n        } else if (this.props.position === 'center') {\n            result.resizeMode = 'center';\n            result.position = {\n                justifyContent: 'center',\n                alignItems: 'center'\n            };\n        } else if (this.props.size === 'contain' || this.props.size === 'cover') {\n            result.resizeMode = this.props.size;\n            return result;\n        }\n        const size = this.props.size?.matchAll(BACKGROUND_SIZE_REGEX).next().value;\n        result.size = {};\n        if (size) {\n            result.size.width = size[1].endsWith('%') ? size[1] : parseInt(size[1]);\n            result.size.height = size[2].endsWith('%') ? size[2] : parseInt(size[2]);\n        }\n        if (!result.resizeMode && this.props.position) {\n            result.position = this.getPosition();\n        }\n        if (!this.getGradient()?.value?.length) {\n            if (this.props.repeat === 'no-repeat') {\n                result.size.width = result.size.width || this.state.naturalImageWidth; \n                result.size.height = result.size.height || this.state.naturalImageHeight; \n            } else if (this.props.repeat === 'repeat-x') {\n                result.resizeMode = 'repeat';\n                result.size.width = result.size.width || '100%'; \n                result.size.height = result.size.height || this.state.naturalImageHeight; \n            } else if (this.props.repeat === 'repeat-y') {\n                result.resizeMode = 'repeat';\n                result.size.width = result.size.width || this.state.naturalImageWidth; \n                result.size.height = result.size.height || '100%'; \n            } else {\n                result.resizeMode = 'repeat';\n            }\n        }\n        return result;\n    }\n\n    public renderLinearGradient(data: string) {\n        const psresult = this.getPositionAndSize();\n        return  (\n            <LinearGradient\n                value={data || ''}\n                style={this.props.style}\n                size={psresult.size}\n                position={psresult.position}\n                middle={psresult.resizeMode === 'center'}>\n            </LinearGradient>\n        );\n    }\n\n    componentDidUpdate(prevProps: Readonly<BackgroundProps>, prevState: Readonly<{}>, snapshot?: any): void {\n        if (this.props.image && prevProps.image !== this.props.image) {\n            this.setImage();\n        }\n    }\n\n    componentDidMount(): void {\n        setTimeout(() => this.setImage(), 100);\n    }\n\n    setImage() {\n        let source = this.props.image?.trim() as any;\n        if (!source) {\n            return;\n        }\n        if (source?.startsWith('url')) {\n            source = this.props.image?.matchAll(IMAGE_URL_REGEX).next().value[1];\n        }\n        if (this.loadAsset) {\n            source = this.loadAsset(source);\n        }\n        if (isFullPathUrl(source)) {\n            source = {\n                uri: source\n            };\n        }\n        this.caluculateSize(source);\n        this.setState({\n            imageSrc: source\n        } as BackgroundState);\n        if (this.props.image) {\n            ASSET_CACHE[this.props.image] = source;\n        }\n    }\n\n    public getGradient() {\n        return this.props.image?.trim().matchAll(LINEAT_GRADIENT_REGEX).next();\n    }\n\n    public renderImage() {\n        const psresult = this.getPositionAndSize();\n        return (\n        <AssetConsumer>\n            {(loadAsset) => {\n            const loadImage = this.loadAsset !== loadAsset;\n            this.loadAsset = loadAsset;\n            loadImage && this.setImage();\n            return (<View style={[{borderWidth: 0, overflow: 'hidden'}, StyleSheet.absoluteFill, this.props.style]}>\n                <View style={[\n                    StyleSheet.absoluteFill, {\n                        flexDirection: 'row',\n                        justifyContent: psresult.position?.justifyContent,\n                        alignItems: psresult.position?.alignItems\n                    }]}>\n                    <View style={[\n                        { position: 'absolute', overflow: 'hidden' },\n                        psresult.position,\n                        isEmpty(psresult.size) ?  StyleSheet.absoluteFill : psresult.size\n                    ]}>\n                        <Image\n                            source={this.state.imageSrc}\n                            resizeMode={psresult.resizeMode as any || 'cover'}\n                            style={[\n                                { \n                                    width: '100%',\n                                    height: '100%'\n                                }, \n                                !isEmpty(psresult.size)\n                                    || (psresult.resizeMode === 'cover'\n                                        || psresult.resizeMode  === 'contain') ? null : {\n                                    minWidth: this.state.naturalImageWidth,\n                                    minHeight: this.state.naturalImageHeight\n                                }\n                            ]}/> \n                    </View>\n                </View>\n            </View>);\n            }}\n        </AssetConsumer>\n        );\n    }\n\n    public render() {\n        const gradientData = this.getGradient();\n        if (gradientData?.value?.length) {\n            return this.renderLinearGradient(gradientData.value[1]);\n        } else if (this.props.image && this.state.imageSrc) {\n            return this.renderImage();\n        }\n        return null;\n    }\n}\n\n"],"mappings":"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"}