{"version":3,"names":["BaseAction","VariableEvents","get","LoginAction","constructor","config","invoke","options","successcb","errorcb","params","paramProvider","notify","BEFORE_INVOKE","securityService","appLogin","baseURL","formData","useDefaultSuccessHandler","then","data","onSuccess","AFTER_INVOKE","navigateToLandingPage","catch","error","onError"],"sources":["login-action.ts"],"sourcesContent":["import { ActionConfig, BaseAction } from \"./base-action\";\nimport { VariableEvents } from '../variables/base-variable';\nimport { SecurityService } from \"@wavemaker/app-rn-runtime/core/security.service\";\nimport { get } from 'lodash';\nexport interface LoginActionConfig extends ActionConfig {\n    securityService: () => SecurityService;\n    baseURL: String;\n    useDefaultSuccessHandler: boolean;\n}\nexport class LoginAction extends BaseAction<LoginActionConfig> {\n    constructor(config: LoginActionConfig) {\n        super(config);\n    }\n\n    invoke(options: any, successcb?: Function, errorcb?: Function) {\n      let params;\n      if (!get(options, 'formData')) {\n        params = this.config.paramProvider();\n      }\n      this.notify(VariableEvents.BEFORE_INVOKE, [this, params]);\n      return this.config.securityService().appLogin(\n        {\n          baseURL: this.config.baseURL,\n          formData: get(options, 'formData') || params,\n          useDefaultSuccessHandler: this.config.useDefaultSuccessHandler\n      })\n        .then((data: any) => {\n            this.config.onSuccess && this.config.onSuccess(this, get(data, 'userInfo'));\n            successcb && successcb(data);\n            this.notify(VariableEvents.AFTER_INVOKE, [this, data]);\n            if (this.config.useDefaultSuccessHandler) {\n              this.config.securityService().navigateToLandingPage(data);\n            }\n        })\n        .catch((error: any) => {\n            this.config.onError && this.config.onError(this, error);\n            errorcb && errorcb(error);\n            this.notify(VariableEvents.AFTER_INVOKE, [this, error]);\n        });\n    }\n}\n"],"mappings":"AAAA,SAAuBA,UAAU,QAAQ,eAAe;AACxD,SAASC,cAAc,QAAQ,4BAA4B;AAE3D,SAASC,GAAG,QAAQ,QAAQ;AAM5B,OAAO,MAAMC,WAAW,SAASH,UAAU,CAAoB;EAC3DI,WAAWA,CAACC,MAAyB,EAAE;IACnC,KAAK,CAACA,MAAM,CAAC;EACjB;EAEAC,MAAMA,CAACC,OAAY,EAAEC,SAAoB,EAAEC,OAAkB,EAAE;IAC7D,IAAIC,MAAM;IACV,IAAI,CAACR,GAAG,CAACK,OAAO,EAAE,UAAU,CAAC,EAAE;MAC7BG,MAAM,GAAG,IAAI,CAACL,MAAM,CAACM,aAAa,CAAC,CAAC;IACtC;IACA,IAAI,CAACC,MAAM,CAACX,cAAc,CAACY,aAAa,EAAE,CAAC,IAAI,EAAEH,MAAM,CAAC,CAAC;IACzD,OAAO,IAAI,CAACL,MAAM,CAACS,eAAe,CAAC,CAAC,CAACC,QAAQ,CAC3C;MACEC,OAAO,EAAE,IAAI,CAACX,MAAM,CAACW,OAAO;MAC5BC,QAAQ,EAAEf,GAAG,CAACK,OAAO,EAAE,UAAU,CAAC,IAAIG,MAAM;MAC5CQ,wBAAwB,EAAE,IAAI,CAACb,MAAM,CAACa;IAC1C,CAAC,CAAC,CACCC,IAAI,CAAEC,IAAS,IAAK;MACjB,IAAI,CAACf,MAAM,CAACgB,SAAS,IAAI,IAAI,CAAChB,MAAM,CAACgB,SAAS,CAAC,IAAI,EAAEnB,GAAG,CAACkB,IAAI,EAAE,UAAU,CAAC,CAAC;MAC3EZ,SAAS,IAAIA,SAAS,CAACY,IAAI,CAAC;MAC5B,IAAI,CAACR,MAAM,CAACX,cAAc,CAACqB,YAAY,EAAE,CAAC,IAAI,EAAEF,IAAI,CAAC,CAAC;MACtD,IAAI,IAAI,CAACf,MAAM,CAACa,wBAAwB,EAAE;QACxC,IAAI,CAACb,MAAM,CAACS,eAAe,CAAC,CAAC,CAACS,qBAAqB,CAACH,IAAI,CAAC;MAC3D;IACJ,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAU,IAAK;MACnB,IAAI,CAACpB,MAAM,CAACqB,OAAO,IAAI,IAAI,CAACrB,MAAM,CAACqB,OAAO,CAAC,IAAI,EAAED,KAAK,CAAC;MACvDhB,OAAO,IAAIA,OAAO,CAACgB,KAAK,CAAC;MACzB,IAAI,CAACb,MAAM,CAACX,cAAc,CAACqB,YAAY,EAAE,CAAC,IAAI,EAAEG,KAAK,CAAC,CAAC;IAC3D,CAAC,CAAC;EACN;AACJ"}