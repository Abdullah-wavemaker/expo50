{"version":3,"names":["BaseComponentState","forEach","isEmpty","some","get","WmForm","WmFormState","constructor","arguments","_defineProperty","Live_Operations","INSERT","UPDATE","DELETE","READ","WmLiveForm","findOperationType","operation","isPrimary","primaryKey","state","props","formdata","length","value","handleSubmit","event","preventDefault","formData","dataoutput","formdataoutput","operationType","validateFieldsOnSubmit","onBeforesubmit","invokeEventCallback","proxy","formSubmit","inputFields","data","onResultCb","error","response","status","formSuccess","onSuccess","postmessage","toggleMessage","onError","errormessage"],"sources":["liveform.component.tsx"],"sourcesContent":["import { BaseComponentState } from '@wavemaker/app-rn-runtime/core/base.component';\nimport { forEach, isEmpty, some, get } from 'lodash';\n\nimport WmFormProps from '../form/form.props';\nimport WmForm from '@wavemaker/app-rn-runtime/components/data/form/form.component';\n\nexport class WmFormState extends BaseComponentState<WmFormProps> {\n  isValid = false;\n  type: 'success' | 'warning' | 'error' | 'info' | 'loading' | undefined = 'success';\n  message: string = '';\n  showInlineMsg: boolean = false;\n}\nconst Live_Operations = {\n  INSERT : 'insert',\n  UPDATE : 'update',\n  DELETE : 'delete',\n  READ : 'read'\n}\n\nexport default class WmLiveForm extends WmForm {\n\n  findOperationType() {\n    let operation;\n    let isPrimary = false;\n    // const sourceOperation = this.form.datasource && this.form.datasource.execute(DataSource.Operation.GET_OPERATION_TYPE);\n    // if (sourceOperation && sourceOperation !== 'read') {\n    //   return sourceOperation;\n    // }\n    /*If OperationType is not set then based on the formdata object return the operation type,\n        this case occurs only if the form is outside a livegrid*/\n    /*If the formdata object has primary key value then return update else insert*/\n    if (this.primaryKey && !isEmpty(this.state.props.formdata)) {\n      /*If only one column is primary key*/\n      if (this.primaryKey.length === 1) {\n        if (this.state.props.formdata[this.primaryKey[0]]) {\n          operation = Live_Operations.UPDATE;\n        }\n        /*If only no column is primary key*/\n      } else if (this.primaryKey.length === 0) {\n          forEach(this.state.props.formdata, (value) => {\n          if (value) {\n            isPrimary = true;\n          }\n        });\n        if (isPrimary) {\n          operation = Live_Operations.UPDATE;\n        }\n        /*If multiple columns are primary key*/\n      } else {\n        // @ts-ignore\n        isPrimary = some(this.primaryKey, (primaryKey: any) => {\n          if (this.state.props.formdata[primaryKey]) {\n            return true;\n          }\n        });\n        if (isPrimary) {\n          operation = Live_Operations.UPDATE;\n        }\n      }\n    }\n    return operation || Live_Operations.INSERT;\n  }\n\n  // @ts-ignore\n  handleSubmit(event?: any) {\n    event?.preventDefault();\n    const formData = this.state.props.dataoutput || this.formdataoutput;\n    const operationType = this.findOperationType();\n\n    if (!this.validateFieldsOnSubmit()) {\n      return false;\n    }\n    if (this.props.onBeforesubmit) {\n      this.invokeEventCallback('onBeforesubmit', [ null, this.proxy, formData ]);\n    }\n    if (this.props.formSubmit) {\n      this.props.formSubmit({inputFields: formData}, operationType, ((data: any) => {\n        this.invokeEventCallback('onSubmit', [ null, this.proxy, formData ]);\n        this.onResultCb(get(data, 'params'), 'success');\n      }), ((error: any) => {\n        this.invokeEventCallback('onSubmit', [ null, this.proxy, formData ]);\n        this.onResultCb(error, '');\n      }));\n    } else {\n      this.invokeEventCallback('onSubmit', [ null, this.proxy, formData ]);\n    }\n  }\n\n  onResultCb(response: any, status: string, event?: any) {\n    this.invokeEventCallback('onResult', [ null, this.proxy, response ]);\n    if (status) {\n      this.invokeEventCallback('onSuccess', [ null, this.proxy, response ]);\n      this.props.formSuccess && this.props.formSuccess();\n      !this.props.onSuccess && this.state.props.postmessage && this.toggleMessage('success', this.state.props.postmessage);\n    } else {\n      this.invokeEventCallback('onError', [ null, this.proxy, response ]);\n      !this.props.onError && this.toggleMessage('error', this.state.props.errormessage || get(response, 'message') || response);\n    }\n  }\n\n}\n"],"mappings":"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"}