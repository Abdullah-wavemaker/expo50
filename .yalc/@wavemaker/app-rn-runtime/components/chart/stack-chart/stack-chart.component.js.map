{"version":3,"names":["React","View","Platform","Svg","VictoryStack","VictoryBar","VictoryChart","VictoryPie","VictoryLegend","VictoryAxis","Axis","Scale","orderBy","cloneDeep","findIndex","isString","AccessibilityWidgetType","getAccessibilityProps","WmStackChartProps","DEFAULT_CLASS","BaseChartComponent","BaseChartComponentState","WmStackChartState","constructor","arguments","_defineProperty","WmStackChart","props","e","viewWidth","nativeEvent","layout","width","updateState","chartWidth","componentDidMount","setHeightWidthOnChart","getNegativeValuesArray","negativeValuesArray","state","data","filter","d","y","getPositiveValuesArray","positiveValuesArray","getData","negativeValues","concat","updateColors","colors","length","colorCodes","orderedData","map","i","index","getBarChart","currentValue","cornerRadius","d1","x","push","top","bottom","createElement","key","name","getColorCodes","reverse","getArcChart","colorScaleArray","maxValue","Math","max","o","radius","min","chartHeight","colorScale","startAngle","endAngle","standalone","origin","innerRadius","thickness","labels","getArcAxis","ticks","getTickValues","axisData","forEach","yunits","style","fontSize","paddingLeft","paddingRight","labelRadius","minValue","scale","getBaseScale","domain","getTicks","unshift","minvalue","onSelect","event","value","label","xaxisDatakeyArr","datum","selectedItem","dataset","selectedChartItem","series","_dataObj","invokeEventCallback","proxy","renderWidget","mindomain","xdomain","chartMinX","undefined","ydomain","chartMinY","_extends","LINECHART","styles","root","onLayout","onViewLayoutChange","viewtype","theme","minDomain","height","padding","offsettop","offsetbottom","left","offsetleft","right","offsetright","containerComponent","getTooltip","title","fontFamily","subheading","orientation","gutter","getLegendView","crossAxis","tickLabels","fill","showyaxis","axisLabel","grid","stroke","tickValues","tickFormat","t","abbreviateNumber","dependentAxis","horizontal","strokeWidth","events","target","eventHandlers","OS","onClick","bind","onPress"],"sources":["stack-chart.component.tsx"],"sourcesContent":["import React from 'react';\nimport { LayoutChangeEvent, View, Platform } from 'react-native';\nimport { Svg } from 'react-native-svg';\nimport { VictoryStack, VictoryBar, VictoryChart, VictoryPie, VictoryLegend, VictoryAxis } from 'victory-native';\nimport { Axis, Scale } from 'victory-core';\nimport { orderBy, cloneDeep, findIndex, isString} from 'lodash';\nimport { AccessibilityWidgetType, getAccessibilityProps } from '@wavemaker/app-rn-runtime/core/accessibility';\nimport WmStackChartProps from './stack-chart.props';\nimport { DEFAULT_CLASS, WmStackChartStyles } from './stack-chart.styles';\nimport {\n  BaseChartComponent,\n  BaseChartComponentState\n} from '@wavemaker/app-rn-runtime/components/chart/basechart.component';\n\nexport class WmStackChartState extends BaseChartComponentState<WmStackChartProps> {\n  chartWidth = 0;\n}\n\nexport default class WmStackChart extends BaseChartComponent<WmStackChartProps, WmStackChartState, WmStackChartStyles> {\n  constructor(props: WmStackChartProps) {\n    super(props, DEFAULT_CLASS, new WmStackChartProps(), new WmStackChartState());\n  }\n\n  componentDidMount() {\n    super.componentDidMount();\n    this.setHeightWidthOnChart();\n  }\n\n  getNegativeValuesArray() {\n    let negativeValuesArray = cloneDeep(this.state.data[0]).filter((d: any) => d.y < 0);\n    negativeValuesArray = orderBy(negativeValuesArray, 'y', 'desc');\n    return negativeValuesArray;\n  }\n\n  getPositiveValuesArray() {\n    let positiveValuesArray = cloneDeep(this.state.data[0]).filter((d: any) => d.y > 0);\n    positiveValuesArray = orderBy(positiveValuesArray, 'y', 'asc');\n    return positiveValuesArray;\n  }\n\n  getData() {\n    const negativeValues = cloneDeep(this.getNegativeValuesArray());\n    return negativeValues.concat(cloneDeep(this.getPositiveValuesArray()));\n  }\n\n  updateColors() {\n   if (this.state.colors.length === 1 ) {\n       return this.state.colors[0];\n   } else {\n       let colorCodes = cloneDeep(this.state.colors);\n       if ( this.state.data.length > 0 ) {\n         const orderedData = this.getData();\n         this.state.data[0].map((d: any, i: number) => {\n           let index = findIndex(orderedData, d);\n           colorCodes[index] = this.state.colors[i];\n         })\n         return colorCodes;\n       }\n    }\n  }\n\n  getBarChart(props: WmStackChartProps) {\n    if ( this.state.data.length > 0 ) {\n      const negativeValues = cloneDeep(this.getNegativeValuesArray());\n      const data = this.getData();\n      let currentValue = 0;\n      let cornerRadius: any;\n\n      return data.map((d: any, i: number) => {\n        let d1: any = [];\n        d.x = 0;\n        d.y = d.y - currentValue;\n        d1.push(d);\n        currentValue = d.y < 0 && i === negativeValues.length -1 ? 0 : d.y + currentValue;\n        if (i === 0) {\n          cornerRadius = {top: 0, bottom: -5};\n        }\n        if (i === data.length - 1) {\n          cornerRadius = {top: -5, bottom: -5};\n        }\n        return <VictoryBar key={props.name + '_' + i}\n                           cornerRadius={cornerRadius}\n                           data={d1}/>\n      });\n    }\n  }\n\n  private getColorCodes() {\n      const colors = cloneDeep(this.updateColors());\n      return isString(colors) ? [colors] : colors.reverse();\n  }\n\n  getArcChart(props: WmStackChartProps) {\n    if ( this.state.data.length > 0 ) {\n      let data = cloneDeep(this.state.data[0]);\n      const colorScaleArray = this.getColorCodes();\n      const maxValue = Math.max(...data.map((o: any) => o.y));\n      data = orderBy(data, 'y', 'desc');\n      const radius = Math.min(this.state.chartWidth/2, this.state.chartHeight - 50);\n      return data.map((d: any, i: number) => {\n        let d1: any = [];\n        d1.push(d);\n        d1.push({x: d.x, y: maxValue - d.y})\n        return <VictoryPie key={props.name + '_' + i}\n                           radius={radius}\n                           colorScale={[colorScaleArray[i], '#fff0']}\n                           startAngle={-80}\n                           endAngle={80}\n                           cornerRadius={100}\n                           standalone={false}\n                           origin={{x: (this.state.chartWidth/2), y: (this.state.chartHeight - 50)}}\n                           innerRadius={radius - this.state.props.thickness}\n                           labels={[]}\n                           data={d1}/>\n      });\n    }\n  }\n\n  getArcAxis() {\n    const ticks = this.getTickValues();\n    const radius = Math.min(this.state.chartWidth/2, this.state.chartHeight-50);\n    const axisData: any = [];\n    ticks.forEach((d: any, i: any) => {\n      axisData.push({x:  `${this.state.props.yunits}${d}`, y: 1})\n    });\n    return <VictoryPie\n     style={{\n       labels: {\n         fontSize: 12, paddingLeft: 50, paddingRight: 80\n       }}\n     }\n      startAngle={-90}\n      endAngle={90}\n      standalone={false}\n      colorScale={['#fff0']}\n      origin={{x: (this.state.chartWidth/2 - 5), y: (this.state.chartHeight - 50)}}\n      labelRadius={radius - this.state.props.thickness - 20}\n      data={axisData}\n    />\n  }\n\n  onViewLayoutChange = (e: LayoutChangeEvent) => {\n    let viewWidth = e.nativeEvent.layout.width;\n    this.updateState({\n      chartWidth: viewWidth\n    } as WmStackChartState);\n  }\n\n  getTickValues() {\n    let ticks: any = [];\n    if (this.state.data[0].length) {\n      let data = cloneDeep(this.state.data[0]);\n      const maxValue = Math.max(...data.map((o: any) => o.y ? o.y : 0));\n      const minValue = Math.min(...data.map((o: any) => o.y ? o.y : 0));\n      const scale = Scale.getBaseScale({}, 'x');\n      scale.domain([minValue > 0 ? 0 : minValue, maxValue]);\n      ticks = Axis.getTicks({}, scale);\n      ticks[ticks.length -1] = maxValue;\n      if ( minValue < 0 ) {\n        if (ticks[0] === 0) {\n          ticks.unshift(minValue);\n        } else {\n          ticks[0] = minValue;\n        }\n      } else {\n        ticks[0] = this.state.props.minvalue;\n      }\n    }\n    return ticks;\n  }\n\n  onSelect(event: any, data: any){\n    let value = data.data[data.index].y;\n    let label = this.state.xaxisDatakeyArr[data.datum.x];\n    let selectedItem = this.props.dataset[data.index];\n    let selectedChartItem = [{series: 0, x: data.index, y: value,_dataObj: selectedItem},data.index];\n    this.invokeEventCallback('onSelect', [event.nativeEvent, this.proxy, selectedItem, selectedChartItem ]);\n  }\n\n  renderWidget(props: WmStackChartProps) {\n    this.invokeEventCallback('onBeforerender', [this.proxy, null]);\n    if (!this.state.data.length) {\n      return null;\n    }\n    let mindomain={x: this.props.xdomain === 'Min' ? this.state.chartMinX: undefined, y: this.props.ydomain === 'Min' ? this.state.chartMinY: undefined};\n    return (\n      <View\n        {...getAccessibilityProps(AccessibilityWidgetType.LINECHART, props)}\n        style={this.styles.root} onLayout={this.onViewLayoutChange}\n      >{\n        props.viewtype === 'Bar' ?\n          <VictoryChart\n            theme={this.state.theme}\n            minDomain={mindomain}\n            height={this.styles.root.height as number}\n            width={this.styles.root.width as number || this.state.chartWidth || 200}\n            padding={{\n              top: props.offsettop,\n              bottom: props.offsetbottom,\n              left: props.offsetleft,\n              right: props.offsetright\n            }}\n            containerComponent={\n              this.getTooltip(props)\n            }\n            >\n            <VictoryLegend\n              name={'legend'}\n              containerComponent={<Svg />}\n              style={{title: {\n                fontFamily: \"'Helvetica Neue', 'Helvetica', sans-serif\",\n                fontSize: 18\n              }\n              }}\n              title={[props.title, props.subheading]}\n              orientation=\"horizontal\"\n              gutter={20}\n              data={[]}\n              theme={this.state.theme}\n            />\n            {this.getLegendView(this.updateColors())}\n            <VictoryAxis crossAxis\n                         style={{\n                           tickLabels: { fill: this.state.props.showyaxis === false ? 'transparent' : '#000000',  fontSize: 12, padding: this.state.props.thickness/2 + 5},\n                           axisLabel: { padding: (15 + this.state.props.thickness/2) },\n                           grid: {stroke: 'none'}\n                         }}\n                         theme={this.state.theme}\n                         tickValues={this.getTickValues()}\n                         tickFormat={(t) => this.state.props.yunits ? `${this.abbreviateNumber(t)}${this.state.props.yunits}` : `${this.abbreviateNumber(t)}`} dependentAxis />\n            <VictoryStack\n              colorScale={this.updateColors()}\n              horizontal={true}\n              style={{\n                data: { strokeWidth: this.state.props.thickness }\n              }}\n              events={[{\n                target: 'data',\n                eventHandlers: Platform.OS == \"web\" ? {\n                  onClick: this.onSelect.bind(this)\n                }:{\n                  onPress: this.onSelect.bind(this)\n                }\n              }]}\n            >\n              {\n                this.getBarChart(props)\n              }\n            </VictoryStack>\n          </VictoryChart> :\n          <Svg width={this.state.chartWidth} height={this.state.chartHeight}>\n            <VictoryLegend\n              name={'legend'}\n              containerComponent={<Svg />}\n              title={[props.title, props.subheading]}\n              orientation=\"horizontal\"\n              gutter={20}\n              data={[]}\n              theme={this.state.theme}\n            />\n            {this.getArcChart(props)}\n            {this.getArcAxis()}\n          </Svg>\n      }\n      </View>\n    );\n  }\n}\n"],"mappings":"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"}