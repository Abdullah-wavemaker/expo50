{"version":3,"names":["BASE_THEME","defineStyles","Color","DEFAULT_CLASS","registerStyle","themeVariables","addStyle","defaultStyles","root","backgroundColor","defaultColorF","flexDirection","justifyContent","alignItems","paddingHorizontal","paddingVertical","borderRadius","minWidth","text","color","defaultColor3","playIcon","icon","pauseIcon","muteIcon","unmuteIcon","slider","flex","display","minimumTrack","maximumTrack","lighten","rgb","toString","thumb"],"sources":["audio.styles.ts"],"sourcesContent":["import BASE_THEME from '@wavemaker/app-rn-runtime/styles/theme';\nimport { BaseStyles, defineStyles } from '@wavemaker/app-rn-runtime/core/base.component';\nimport { WmSliderStyles } from '../../input/slider/slider.styles';\nimport { WmIconStyles } from '../icon/icon.styles';\nimport Color from 'color';\n\nexport type WmAudioStyles = BaseStyles & {\n    playIcon: WmIconStyles\n    pauseIcon: WmIconStyles\n    muteIcon: WmIconStyles\n    unmuteIcon: WmIconStyles\n    slider: WmSliderStyles\n};\n\nexport const DEFAULT_CLASS = 'app-audio';\nBASE_THEME.registerStyle((themeVariables, addStyle) => {\n    const defaultStyles = defineStyles<WmAudioStyles>({\n        root: {\n            backgroundColor: themeVariables.defaultColorF,\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            paddingHorizontal: 16,\n            paddingVertical: 8,\n            borderRadius: 64,\n            minWidth: 300\n        },\n        text: {\n            color: themeVariables.defaultColor3,\n            paddingHorizontal: 8\n        },\n        playIcon: {\n            icon: {\n                color: themeVariables.defaultColor3\n            }\n        },\n        pauseIcon: {\n            icon: {\n                color: themeVariables.defaultColor3\n            }\n        },\n        muteIcon: {\n            icon: {\n                color: themeVariables.defaultColor3\n            }\n        },\n        unmuteIcon: {\n            icon: {\n                color: themeVariables.defaultColor3\n            }\n        },\n        slider: {\n            root: {\n                flex: 1\n            },\n            text: {\n                display: 'none'\n            },\n            minimumTrack: {\n                backgroundColor: themeVariables.defaultColor3\n            },\n            maximumTrack: {\n                backgroundColor: Color(themeVariables.defaultColor3).lighten(0.8).rgb().toString()\n            },\n            thumb: {\n                backgroundColor: themeVariables.defaultColor3\n            }\n        } as WmSliderStyles\n    } as WmAudioStyles);\n    addStyle(DEFAULT_CLASS, '', defaultStyles);\n});"],"mappings":"AAAA,OAAOA,UAAU,MAAM,wCAAwC;AAC/D,SAAqBC,YAAY,QAAQ,+CAA+C;AAGxF,OAAOC,KAAK,MAAM,OAAO;AAUzB,OAAO,MAAMC,aAAa,GAAG,WAAW;AACxCH,UAAU,CAACI,aAAa,CAAC,CAACC,cAAc,EAAEC,QAAQ,KAAK;EACnD,MAAMC,aAAa,GAAGN,YAAY,CAAgB;IAC9CO,IAAI,EAAE;MACFC,eAAe,EAAEJ,cAAc,CAACK,aAAa;MAC7CC,aAAa,EAAE,KAAK;MACpBC,cAAc,EAAE,eAAe;MAC/BC,UAAU,EAAE,QAAQ;MACpBC,iBAAiB,EAAE,EAAE;MACrBC,eAAe,EAAE,CAAC;MAClBC,YAAY,EAAE,EAAE;MAChBC,QAAQ,EAAE;IACd,CAAC;IACDC,IAAI,EAAE;MACFC,KAAK,EAAEd,cAAc,CAACe,aAAa;MACnCN,iBAAiB,EAAE;IACvB,CAAC;IACDO,QAAQ,EAAE;MACNC,IAAI,EAAE;QACFH,KAAK,EAAEd,cAAc,CAACe;MAC1B;IACJ,CAAC;IACDG,SAAS,EAAE;MACPD,IAAI,EAAE;QACFH,KAAK,EAAEd,cAAc,CAACe;MAC1B;IACJ,CAAC;IACDI,QAAQ,EAAE;MACNF,IAAI,EAAE;QACFH,KAAK,EAAEd,cAAc,CAACe;MAC1B;IACJ,CAAC;IACDK,UAAU,EAAE;MACRH,IAAI,EAAE;QACFH,KAAK,EAAEd,cAAc,CAACe;MAC1B;IACJ,CAAC;IACDM,MAAM,EAAE;MACJlB,IAAI,EAAE;QACFmB,IAAI,EAAE;MACV,CAAC;MACDT,IAAI,EAAE;QACFU,OAAO,EAAE;MACb,CAAC;MACDC,YAAY,EAAE;QACVpB,eAAe,EAAEJ,cAAc,CAACe;MACpC,CAAC;MACDU,YAAY,EAAE;QACVrB,eAAe,EAAEP,KAAK,CAACG,cAAc,CAACe,aAAa,CAAC,CAACW,OAAO,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC;MACrF,CAAC;MACDC,KAAK,EAAE;QACHzB,eAAe,EAAEJ,cAAc,CAACe;MACpC;IACJ;EACJ,CAAkB,CAAC;EACnBd,QAAQ,CAACH,aAAa,EAAE,EAAE,EAAEI,aAAa,CAAC;AAC9C,CAAC,CAAC"}