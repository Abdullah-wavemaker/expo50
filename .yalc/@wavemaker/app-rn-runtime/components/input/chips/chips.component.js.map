{"version":3,"names":["React","View","TouchableOpacity","Text","clone","findIndex","get","isUndefined","pull","forEach","filter","find","isEqual","merge","WmChipsProps","DEFAULT_CLASS","WmSearch","BaseDatasetComponent","BaseDatasetState","WmIcon","WmPicture","AccessibilityWidgetType","getAccessibilityProps","WmChipsState","constructor","arguments","_defineProperty","WmChips","props","onComponentInit","c","searchRef","val","onPropertyChange","name","$new","$old","length","updateState","chipsList","reset","_this$searchRef","state","query","onDataItemsUpdate","isDefaultQuery","updateDefaultQueryModel","addItem","$event","widget","_this$props","_this$props2","newChipList","allowAdd","push","queryModel","isFormFieldWidget","isDuplicate","resetSearchModel","invokeEvent","invokeEventCallback","toBoolean","setDatavalue","computeDisplayValue","displayValue","dataItems","item","selected","map","displayexp","displayfield","selectChip","chipItem","maxsize","selectedItem","d","key","dataValue","datafield","updateDatavalue","updateMaxSize","prevDatavalue","createCustomDataModel","dataObject","isCustom","clearSearch","chipListLength","saturate","removeItem","index","allowRemove","isDefaultView","_this$state$dataItems","searchable","renderChip","isSelected","createElement","_extends","getTestPropsForAction","CHIPS","style","styles","chip","activeChip","onPress","disabled","iconclass","iconsize","doneIcon","icon","color","activeChipLabel","id","getTestId","imageStyles","picturesource","imgSrc","shape","chipLabel","clearIcon","onTap","selectedItems","componentDidMount","componentDidUpdate","prevProps","prevState","_this$searchRef2","computePosition","renderWidget","chips","root","chipsWrapper","searchContainer","flexDirection","inputposition","search","placeholder","maxSizeReached","listener","dataset","searchkey","minchars","autofocus","readonly","displayexpression","getDisplayExpression","displayimagesrc","onSubmit","bind","onChange","_this$props$listener","_this$props$listener2","onComponentChange","showSearchIcon","showclear","type","flexWrap"],"sources":["chips.component.tsx"],"sourcesContent":["import React from 'react';\nimport { View, TouchableOpacity, Text } from 'react-native';\nimport { LifecycleListener } from '@wavemaker/app-rn-runtime/core/base.component';\nimport { clone, findIndex, get, isUndefined, pull, forEach, filter, find, isEqual, merge } from 'lodash';\nimport WmChipsProps from './chips.props';\nimport { DEFAULT_CLASS, WmChipsStyles } from './chips.styles';\nimport WmSearch from '@wavemaker/app-rn-runtime/components/basic/search/search.component';\nimport {\n  BaseDatasetComponent,\n  BaseDatasetState\n} from '@wavemaker/app-rn-runtime/components/input/basedataset/basedataset.component';\nimport WmIcon from '@wavemaker/app-rn-runtime/components/basic/icon/icon.component';\nimport WmPicture from '@wavemaker/app-rn-runtime/components/basic/picture/picture.component';\nimport { AccessibilityWidgetType, getAccessibilityProps } from '@wavemaker/app-rn-runtime/core/accessibility'; \n\nexport class WmChipsState extends BaseDatasetState<WmChipsProps> {\n  chipsList: any = [];\n  saturate: any;\n}\n\nexport default class WmChips extends BaseDatasetComponent<WmChipsProps, WmChipsState, WmChipsStyles> {\n  constructor(props: WmChipsProps) {\n    super(props, DEFAULT_CLASS, new WmChipsProps(), new WmChipsState());\n  }\n\n  private searchRef: WmSearch = null as any;\n  private maxSizeReached = 'Max size reached';\n  private isDefaultQuery: boolean = true;\n  private prevDatavalue: any;\n\n  private listener: LifecycleListener = {\n    onComponentInit: (c) => {\n      if (c instanceof WmSearch) {\n        this.searchRef = c;\n      }\n    }\n  };\n\n  onPropertyChange(name: string, $new: any, $old: any): void {\n      super.onPropertyChange(name, $new, $old);\n      switch(name) {\n        case 'datavalue':\n          if (!$new || $new.length === 0) {\n            this.updateState({\n              chipsList : []\n            } as WmChipsState);\n          }\n      }\n  }\n\n  reset() {\n    if (this.searchRef?.state.props.query) {\n      this.searchRef.reset();\n    }\n  }\n\n  onDataItemsUpdate() {\n    super.onDataItemsUpdate();\n    this.isDefaultQuery = true;\n    this.updateDefaultQueryModel();\n  }\n\n  addItem($event: any, widget: any) {\n    let newChipList = clone(this.state.chipsList),\n      allowAdd;\n    newChipList.push(widget.queryModel);\n    const isFormFieldWidget = get(this.props, 'formfield');\n    if (this.isDuplicate(widget.queryModel)) {\n      this.resetSearchModel();\n      return;\n    }\n\n    // @ts-ignore\n    allowAdd = isFormFieldWidget ? this.props?.invokeEvent('onBeforeadd', [null, this, widget.queryModel]) : this.invokeEventCallback('onBeforeadd', [null, this, widget.queryModel]);\n\n    if (!isUndefined(allowAdd) && !this.toBoolean(allowAdd)) {\n      return;\n    }\n\n    this.updateState({\n      chipsList: newChipList\n    } as WmChipsState);\n\n    this.setDatavalue(newChipList);\n\n    // @ts-ignore\n    isFormFieldWidget ? this.props?.invokeEvent('onAdd', [null, this, widget.queryModel]) : this.invokeEventCallback('onAdd', [null, this, widget.queryModel]);\n    this.resetSearchModel();\n  }\n\n  computeDisplayValue() {\n    this.updateState({\n      props: {\n        displayValue: ((this.state.dataItems || [] as any)\n          .filter((item: any) => item.selected)\n          .map((item: any) => item.displayexp || item.displayfield)) || ''\n      }\n    } as WmChipsState);\n  }\n\n  selectChip(chipItem: any) {\n    if (!chipItem.selected && this.state.props.maxsize > 0 && (this.state.chipsList.length === this.state.props.maxsize)) {\n      return;\n    }\n    chipItem.selected = !chipItem.selected;\n    const newChipList: any = [];\n    const selectedItem = find(this.state.dataItems, d => isEqual(d.key, chipItem.key));\n    selectedItem.selected = chipItem.selected;\n    forEach(this.state.dataItems, (item) => {\n      if (item.selected) {\n        newChipList.push(item);\n      }\n    });\n    this.updateState({\n      chipsList: newChipList\n    } as WmChipsState);\n\n    this.setDatavalue(newChipList);\n  }\n\n  setDatavalue(newChipList: any) {\n    const dataValue = newChipList.map((item: any) => item.datafield);\n    this.updateDatavalue(dataValue);\n    this.updateMaxSize(newChipList.length);\n    if (!this.props.invokeEvent) {\n      this.invokeEventCallback('onChange', [null, this, dataValue, this.prevDatavalue])\n    }\n    this.prevDatavalue = dataValue;\n  }\n\n  toBoolean = (val: any) => ((val && val !== 'false') ? true  : false);\n\n  // Prepare datavalue object from a string(junk) value when datafield is allFields.\n  createCustomDataModel(val: string) {\n     return {\n        key: `${this.state.props.name}_item${this.state.chipsList.length}`,\n        dataObject: val,\n        displayfield: val,\n        datafield: val,\n        isCustom: true\n     }\n  }\n\n  resetSearchModel() {\n    (this as any).searchRef.isDefaultQuery = false;\n    this.searchRef.clearSearch();\n  }\n\n  isDuplicate(item: any) {\n    return findIndex(this.state.chipsList, {datafield: item.datafield}) > -1;\n  }\n\n  // Check if max size is reached\n  private updateMaxSize(chipListLength: number) {\n    const saturate = this.state.props.maxsize > 0 && (chipListLength || this.state.chipsList.length) === this.state.props.maxsize;\n    this.updateState({\n      saturate: saturate\n    } as WmChipsState);\n  }\n\n  removeItem(item: any, index: any) {\n    let newChipList = clone(this.state.chipsList);\n    const isFormFieldWidget = get(this.props, 'formfield');\n    newChipList = pull(newChipList, item);\n    // prevent deletion if the before-remove event callback returns false\n    // @ts-ignore\n    const allowRemove = isFormFieldWidget ? this.props.invokeEvent('onBeforeremove',[null, this, item]) : this.invokeEventCallback('onBeforeremove',[null, this, item]);\n    if (!isUndefined(allowRemove) && !this.toBoolean(allowRemove)) {\n      return;\n    }\n    this.updateState({\n      chipsList: newChipList\n    } as WmChipsState);\n    this.setDatavalue(newChipList);\n    // @ts-ignore\n    isFormFieldWidget ? this.props.invokeEvent('onRemove', [null, this, item]) : this.invokeEventCallback('onRemove', [null, this, item]);\n  }\n\n  private isDefaultView() {\n    return !this.state.props.searchable && this.state.dataItems?.length <= 10;\n  }\n\n  renderChip(item: any, index: any) {\n    const isSelected = this.isDefaultView() ? item.selected : true;\n    return (\n      <TouchableOpacity\n        {...this.getTestPropsForAction('chip'+ index)}\n        {...getAccessibilityProps(AccessibilityWidgetType.CHIPS, {...this.state.props, selected: isSelected})}\n        style={[this.styles.chip, isSelected ? this.styles.activeChip : null]}\n        key={'chipitem_'+ index}\n        onPress={() => {\n          if (this.state.props.disabled) {\n            return;\n          }\n          if (this.isDefaultView()) {\n            this.selectChip(item);\n          }\n          if (get(this.props, 'formfield')) {\n            // @ts-ignore\n            this.props.invokeEvent('onChipclick', [null, this, item]);\n            // @ts-ignore\n            this.props.invokeEvent('onChipselect', [null, this, item]);\n          } else {\n            this.invokeEventCallback('onChipclick', [null, this, item]);\n            this.invokeEventCallback('onChipselect', [null, this, item]);\n          }\n        }}>\n        {isSelected && this.isDefaultView() ? <WmIcon iconclass={'wm-sl-l sl-check'} iconsize={16} styles={merge({}, this.styles.doneIcon, {icon: {color: isSelected ? this.styles.activeChipLabel.color : null}})}></WmIcon> : null}\n        <WmPicture id={this.getTestId('picture')} styles={this.styles.imageStyles} picturesource={item.imgSrc} shape='circle'></WmPicture>\n        <Text {...this.getTestPropsForAction('chip'+ index+'label')}style={[this.styles.chipLabel, isSelected ? this.styles.activeChipLabel : null]}>{item.displayexp || item.displayfield}</Text>\n        {!this.isDefaultView() && !this.state.props.disabled ? <WmIcon  id={this.getTestId('clearbtn')} iconclass={'wi wi-clear'} iconsize={16} styles={this.styles.clearIcon} onTap={() => this.removeItem(item, index)}></WmIcon> : null}\n      </TouchableOpacity>\n    )\n  }\n\n  updateDefaultQueryModel() {\n      if (this.state.dataItems && this.state.dataItems.length && this.isDefaultQuery) {\n          const selectedItems = filter(this.state.dataItems, (item) => item.selected);\n          if (selectedItems.length) {\n            this.updateState({\n              chipsList: selectedItems\n            } as WmChipsState);\n          }\n          this.isDefaultQuery = false;\n      }\n  }\n\n  componentDidMount(): void {\n    super.componentDidMount();\n    this.updateDefaultQueryModel();\n  }\n\n  componentDidUpdate(prevProps: WmChipsProps, prevState: WmChipsState) {\n    super.componentDidUpdate(prevProps, prevState);\n    if (prevState.chipsList !== this.state.chipsList) {\n      this.searchRef?.computePosition();\n    }\n  }\n\n  renderWidget(props: WmChipsProps) {\n    const chips = this.state.chipsList;\n    return (<View style={this.styles.root}>\n\n      <View style={this.styles.chipsWrapper}>\n        {\n          this.isDefaultView() ? this.state.dataItems.map((item: any, index: any) => this.renderChip(item, index)) : null\n        }\n        { props.searchable || !this.isDefaultView() ?\n          <View style={[this.styles.searchContainer, {flexDirection: props.inputposition === 'first' ? 'column' : 'column-reverse'}]}>\n            <WmSearch\n              id={this.getTestId('search')}\n              name=\"app-chip-search\"\n              styles={this.styles.search}\n              placeholder={this.state.saturate ? this.maxSizeReached : props.placeholder}\n              listener={this.listener}\n              dataset={props.dataset}\n              searchkey={props.searchkey}\n              minchars={props.minchars}\n              autofocus={props.autofocus}\n              disabled={props.disabled || props.readonly || this.state.saturate}\n              readonly={props.readonly}\n              displayexpression={props.displayexpression}\n              getDisplayExpression={props.getDisplayExpression}\n              displayimagesrc={props.displayimagesrc}\n              displayfield={props.displayfield}\n              datafield={props.datafield}\n              onSubmit={this.addItem.bind(this)}\n              onChange={() => {\n                this.isDefaultQuery = false;\n                this.props.listener?.onComponentChange && this.props.listener?.onComponentChange(this)\n              }}\n              showSearchIcon={false}\n              showclear={false}\n              type={props.minchars === 0 ? 'autocomplete' : 'search'}/>\n              <View style={{ flexDirection: 'row', flexWrap: 'wrap'}}>\n                {chips && chips.length ?\n                chips.map((item: any, index: any) => this.renderChip(item, index))\n                : null}\n              </View>\n          </View>\n           : null }\n      </View>\n    </View>);\n  }\n}\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,gBAAgB,EAAEC,IAAI,QAAQ,cAAc;AAE3D,SAASC,KAAK,EAAEC,SAAS,EAAEC,GAAG,EAAEC,WAAW,EAAEC,IAAI,EAAEC,OAAO,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAEC,KAAK,QAAQ,QAAQ;AACxG,OAAOC,YAAY,MAAM,eAAe;AACxC,SAASC,aAAa,QAAuB,gBAAgB;AAC7D,OAAOC,QAAQ,MAAM,oEAAoE;AACzF,SACEC,oBAAoB,EACpBC,gBAAgB,QACX,8EAA8E;AACrF,OAAOC,MAAM,MAAM,gEAAgE;AACnF,OAAOC,SAAS,MAAM,sEAAsE;AAC5F,SAASC,uBAAuB,EAAEC,qBAAqB,QAAQ,8CAA8C;AAE7G,OAAO,MAAMC,YAAY,SAASL,gBAAgB,CAAe;EAAAM,YAAA;IAAA,SAAAC,SAAA;IAAAC,eAAA,oBAC9C,EAAE;IAAAA,eAAA;EAAA;AAErB;AAEA,eAAe,MAAMC,OAAO,SAASV,oBAAoB,CAA4C;EACnGO,WAAWA,CAACI,KAAmB,EAAE;IAC/B,KAAK,CAACA,KAAK,EAAEb,aAAa,EAAE,IAAID,YAAY,CAAC,CAAC,EAAE,IAAIS,YAAY,CAAC,CAAC,CAAC;IAACG,eAAA,oBAGxC,IAAI;IAAAA,eAAA,yBACT,kBAAkB;IAAAA,eAAA,yBACT,IAAI;IAAAA,eAAA;IAAAA,eAAA,mBAGA;MACpCG,eAAe,EAAGC,CAAC,IAAK;QACtB,IAAIA,CAAC,YAAYd,QAAQ,EAAE;UACzB,IAAI,CAACe,SAAS,GAAGD,CAAC;QACpB;MACF;IACF,CAAC;IAAAJ,eAAA,oBA8FYM,GAAQ,IAAOA,GAAG,IAAIA,GAAG,KAAK,OAAO,GAAI,IAAI,GAAI,KAAM;EA3GpE;EAeAC,gBAAgBA,CAACC,IAAY,EAAEC,IAAS,EAAEC,IAAS,EAAQ;IACvD,KAAK,CAACH,gBAAgB,CAACC,IAAI,EAAEC,IAAI,EAAEC,IAAI,CAAC;IACxC,QAAOF,IAAI;MACT,KAAK,WAAW;QACd,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE;UAC9B,IAAI,CAACC,WAAW,CAAC;YACfC,SAAS,EAAG;UACd,CAAiB,CAAC;QACpB;IACJ;EACJ;EAEAC,KAAKA,CAAA,EAAG;IAAA,IAAAC,eAAA;IACN,KAAAA,eAAA,GAAI,IAAI,CAACV,SAAS,cAAAU,eAAA,eAAdA,eAAA,CAAgBC,KAAK,CAACd,KAAK,CAACe,KAAK,EAAE;MACrC,IAAI,CAACZ,SAAS,CAACS,KAAK,CAAC,CAAC;IACxB;EACF;EAEAI,iBAAiBA,CAAA,EAAG;IAClB,KAAK,CAACA,iBAAiB,CAAC,CAAC;IACzB,IAAI,CAACC,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACC,uBAAuB,CAAC,CAAC;EAChC;EAEAC,OAAOA,CAACC,MAAW,EAAEC,MAAW,EAAE;IAAA,IAAAC,WAAA,EAAAC,YAAA;IAChC,IAAIC,WAAW,GAAGhD,KAAK,CAAC,IAAI,CAACsC,KAAK,CAACH,SAAS,CAAC;MAC3Cc,QAAQ;IACVD,WAAW,CAACE,IAAI,CAACL,MAAM,CAACM,UAAU,CAAC;IACnC,MAAMC,iBAAiB,GAAGlD,GAAG,CAAC,IAAI,CAACsB,KAAK,EAAE,WAAW,CAAC;IACtD,IAAI,IAAI,CAAC6B,WAAW,CAACR,MAAM,CAACM,UAAU,CAAC,EAAE;MACvC,IAAI,CAACG,gBAAgB,CAAC,CAAC;MACvB;IACF;;IAEA;IACAL,QAAQ,GAAGG,iBAAiB,IAAAN,WAAA,GAAG,IAAI,CAACtB,KAAK,cAAAsB,WAAA,uBAAVA,WAAA,CAAYS,WAAW,CAAC,aAAa,EAAE,CAAC,IAAI,EAAE,IAAI,EAAEV,MAAM,CAACM,UAAU,CAAC,CAAC,GAAG,IAAI,CAACK,mBAAmB,CAAC,aAAa,EAAE,CAAC,IAAI,EAAE,IAAI,EAAEX,MAAM,CAACM,UAAU,CAAC,CAAC;IAEjL,IAAI,CAAChD,WAAW,CAAC8C,QAAQ,CAAC,IAAI,CAAC,IAAI,CAACQ,SAAS,CAACR,QAAQ,CAAC,EAAE;MACvD;IACF;IAEA,IAAI,CAACf,WAAW,CAAC;MACfC,SAAS,EAAEa;IACb,CAAiB,CAAC;IAElB,IAAI,CAACU,YAAY,CAACV,WAAW,CAAC;;IAE9B;IACAI,iBAAiB,IAAAL,YAAA,GAAG,IAAI,CAACvB,KAAK,cAAAuB,YAAA,uBAAVA,YAAA,CAAYQ,WAAW,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,EAAEV,MAAM,CAACM,UAAU,CAAC,CAAC,GAAG,IAAI,CAACK,mBAAmB,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,EAAEX,MAAM,CAACM,UAAU,CAAC,CAAC;IAC1J,IAAI,CAACG,gBAAgB,CAAC,CAAC;EACzB;EAEAK,mBAAmBA,CAAA,EAAG;IACpB,IAAI,CAACzB,WAAW,CAAC;MACfV,KAAK,EAAE;QACLoC,YAAY,EAAG,CAAC,IAAI,CAACtB,KAAK,CAACuB,SAAS,IAAI,EAAS,EAC9CvD,MAAM,CAAEwD,IAAS,IAAKA,IAAI,CAACC,QAAQ,CAAC,CACpCC,GAAG,CAAEF,IAAS,IAAKA,IAAI,CAACG,UAAU,IAAIH,IAAI,CAACI,YAAY,CAAC,IAAK;MAClE;IACF,CAAiB,CAAC;EACpB;EAEAC,UAAUA,CAACC,QAAa,EAAE;IACxB,IAAI,CAACA,QAAQ,CAACL,QAAQ,IAAI,IAAI,CAACzB,KAAK,CAACd,KAAK,CAAC6C,OAAO,GAAG,CAAC,IAAK,IAAI,CAAC/B,KAAK,CAACH,SAAS,CAACF,MAAM,KAAK,IAAI,CAACK,KAAK,CAACd,KAAK,CAAC6C,OAAQ,EAAE;MACpH;IACF;IACAD,QAAQ,CAACL,QAAQ,GAAG,CAACK,QAAQ,CAACL,QAAQ;IACtC,MAAMf,WAAgB,GAAG,EAAE;IAC3B,MAAMsB,YAAY,GAAG/D,IAAI,CAAC,IAAI,CAAC+B,KAAK,CAACuB,SAAS,EAAEU,CAAC,IAAI/D,OAAO,CAAC+D,CAAC,CAACC,GAAG,EAAEJ,QAAQ,CAACI,GAAG,CAAC,CAAC;IAClFF,YAAY,CAACP,QAAQ,GAAGK,QAAQ,CAACL,QAAQ;IACzC1D,OAAO,CAAC,IAAI,CAACiC,KAAK,CAACuB,SAAS,EAAGC,IAAI,IAAK;MACtC,IAAIA,IAAI,CAACC,QAAQ,EAAE;QACjBf,WAAW,CAACE,IAAI,CAACY,IAAI,CAAC;MACxB;IACF,CAAC,CAAC;IACF,IAAI,CAAC5B,WAAW,CAAC;MACfC,SAAS,EAAEa;IACb,CAAiB,CAAC;IAElB,IAAI,CAACU,YAAY,CAACV,WAAW,CAAC;EAChC;EAEAU,YAAYA,CAACV,WAAgB,EAAE;IAC7B,MAAMyB,SAAS,GAAGzB,WAAW,CAACgB,GAAG,CAAEF,IAAS,IAAKA,IAAI,CAACY,SAAS,CAAC;IAChE,IAAI,CAACC,eAAe,CAACF,SAAS,CAAC;IAC/B,IAAI,CAACG,aAAa,CAAC5B,WAAW,CAACf,MAAM,CAAC;IACtC,IAAI,CAAC,IAAI,CAACT,KAAK,CAAC+B,WAAW,EAAE;MAC3B,IAAI,CAACC,mBAAmB,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE,IAAI,EAAEiB,SAAS,EAAE,IAAI,CAACI,aAAa,CAAC,CAAC;IACnF;IACA,IAAI,CAACA,aAAa,GAAGJ,SAAS;EAChC;EAIA;EACAK,qBAAqBA,CAAClD,GAAW,EAAE;IAChC,OAAO;MACJ4C,GAAG,EAAG,GAAE,IAAI,CAAClC,KAAK,CAACd,KAAK,CAACM,IAAK,QAAO,IAAI,CAACQ,KAAK,CAACH,SAAS,CAACF,MAAO,EAAC;MAClE8C,UAAU,EAAEnD,GAAG;MACfsC,YAAY,EAAEtC,GAAG;MACjB8C,SAAS,EAAE9C,GAAG;MACdoD,QAAQ,EAAE;IACb,CAAC;EACJ;EAEA1B,gBAAgBA,CAAA,EAAG;IAChB,IAAI,CAAS3B,SAAS,CAACc,cAAc,GAAG,KAAK;IAC9C,IAAI,CAACd,SAAS,CAACsD,WAAW,CAAC,CAAC;EAC9B;EAEA5B,WAAWA,CAACS,IAAS,EAAE;IACrB,OAAO7D,SAAS,CAAC,IAAI,CAACqC,KAAK,CAACH,SAAS,EAAE;MAACuC,SAAS,EAAEZ,IAAI,CAACY;IAAS,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1E;;EAEA;EACQE,aAAaA,CAACM,cAAsB,EAAE;IAC5C,MAAMC,QAAQ,GAAG,IAAI,CAAC7C,KAAK,CAACd,KAAK,CAAC6C,OAAO,GAAG,CAAC,IAAI,CAACa,cAAc,IAAI,IAAI,CAAC5C,KAAK,CAACH,SAAS,CAACF,MAAM,MAAM,IAAI,CAACK,KAAK,CAACd,KAAK,CAAC6C,OAAO;IAC7H,IAAI,CAACnC,WAAW,CAAC;MACfiD,QAAQ,EAAEA;IACZ,CAAiB,CAAC;EACpB;EAEAC,UAAUA,CAACtB,IAAS,EAAEuB,KAAU,EAAE;IAChC,IAAIrC,WAAW,GAAGhD,KAAK,CAAC,IAAI,CAACsC,KAAK,CAACH,SAAS,CAAC;IAC7C,MAAMiB,iBAAiB,GAAGlD,GAAG,CAAC,IAAI,CAACsB,KAAK,EAAE,WAAW,CAAC;IACtDwB,WAAW,GAAG5C,IAAI,CAAC4C,WAAW,EAAEc,IAAI,CAAC;IACrC;IACA;IACA,MAAMwB,WAAW,GAAGlC,iBAAiB,GAAG,IAAI,CAAC5B,KAAK,CAAC+B,WAAW,CAAC,gBAAgB,EAAC,CAAC,IAAI,EAAE,IAAI,EAAEO,IAAI,CAAC,CAAC,GAAG,IAAI,CAACN,mBAAmB,CAAC,gBAAgB,EAAC,CAAC,IAAI,EAAE,IAAI,EAAEM,IAAI,CAAC,CAAC;IACnK,IAAI,CAAC3D,WAAW,CAACmF,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC7B,SAAS,CAAC6B,WAAW,CAAC,EAAE;MAC7D;IACF;IACA,IAAI,CAACpD,WAAW,CAAC;MACfC,SAAS,EAAEa;IACb,CAAiB,CAAC;IAClB,IAAI,CAACU,YAAY,CAACV,WAAW,CAAC;IAC9B;IACAI,iBAAiB,GAAG,IAAI,CAAC5B,KAAK,CAAC+B,WAAW,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE,IAAI,EAAEO,IAAI,CAAC,CAAC,GAAG,IAAI,CAACN,mBAAmB,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE,IAAI,EAAEM,IAAI,CAAC,CAAC;EACvI;EAEQyB,aAAaA,CAAA,EAAG;IAAA,IAAAC,qBAAA;IACtB,OAAO,CAAC,IAAI,CAAClD,KAAK,CAACd,KAAK,CAACiE,UAAU,IAAI,EAAAD,qBAAA,OAAI,CAAClD,KAAK,CAACuB,SAAS,cAAA2B,qBAAA,uBAApBA,qBAAA,CAAsBvD,MAAM,KAAI,EAAE;EAC3E;EAEAyD,UAAUA,CAAC5B,IAAS,EAAEuB,KAAU,EAAE;IAChC,MAAMM,UAAU,GAAG,IAAI,CAACJ,aAAa,CAAC,CAAC,GAAGzB,IAAI,CAACC,QAAQ,GAAG,IAAI;IAC9D,oBACEnE,KAAA,CAAAgG,aAAA,CAAC9F,gBAAgB,EAAA+F,QAAA,KACX,IAAI,CAACC,qBAAqB,CAAC,MAAM,GAAET,KAAK,CAAC,EACzCnE,qBAAqB,CAACD,uBAAuB,CAAC8E,KAAK,EAAE;MAAC,GAAG,IAAI,CAACzD,KAAK,CAACd,KAAK;MAAEuC,QAAQ,EAAE4B;IAAU,CAAC,CAAC;MACrGK,KAAK,EAAE,CAAC,IAAI,CAACC,MAAM,CAACC,IAAI,EAAEP,UAAU,GAAG,IAAI,CAACM,MAAM,CAACE,UAAU,GAAG,IAAI,CAAE;MACtE3B,GAAG,EAAE,WAAW,GAAEa,KAAM;MACxBe,OAAO,EAAEA,CAAA,KAAM;QACb,IAAI,IAAI,CAAC9D,KAAK,CAACd,KAAK,CAAC6E,QAAQ,EAAE;UAC7B;QACF;QACA,IAAI,IAAI,CAACd,aAAa,CAAC,CAAC,EAAE;UACxB,IAAI,CAACpB,UAAU,CAACL,IAAI,CAAC;QACvB;QACA,IAAI5D,GAAG,CAAC,IAAI,CAACsB,KAAK,EAAE,WAAW,CAAC,EAAE;UAChC;UACA,IAAI,CAACA,KAAK,CAAC+B,WAAW,CAAC,aAAa,EAAE,CAAC,IAAI,EAAE,IAAI,EAAEO,IAAI,CAAC,CAAC;UACzD;UACA,IAAI,CAACtC,KAAK,CAAC+B,WAAW,CAAC,cAAc,EAAE,CAAC,IAAI,EAAE,IAAI,EAAEO,IAAI,CAAC,CAAC;QAC5D,CAAC,MAAM;UACL,IAAI,CAACN,mBAAmB,CAAC,aAAa,EAAE,CAAC,IAAI,EAAE,IAAI,EAAEM,IAAI,CAAC,CAAC;UAC3D,IAAI,CAACN,mBAAmB,CAAC,cAAc,EAAE,CAAC,IAAI,EAAE,IAAI,EAAEM,IAAI,CAAC,CAAC;QAC9D;MACF;IAAE,IACD6B,UAAU,IAAI,IAAI,CAACJ,aAAa,CAAC,CAAC,gBAAG3F,KAAA,CAAAgG,aAAA,CAAC7E,MAAM;MAACuF,SAAS,EAAE,kBAAmB;MAACC,QAAQ,EAAE,EAAG;MAACN,MAAM,EAAExF,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAACwF,MAAM,CAACO,QAAQ,EAAE;QAACC,IAAI,EAAE;UAACC,KAAK,EAAEf,UAAU,GAAG,IAAI,CAACM,MAAM,CAACU,eAAe,CAACD,KAAK,GAAG;QAAI;MAAC,CAAC;IAAE,CAAS,CAAC,GAAG,IAAI,eAC5N9G,KAAA,CAAAgG,aAAA,CAAC5E,SAAS;MAAC4F,EAAE,EAAE,IAAI,CAACC,SAAS,CAAC,SAAS,CAAE;MAACZ,MAAM,EAAE,IAAI,CAACA,MAAM,CAACa,WAAY;MAACC,aAAa,EAAEjD,IAAI,CAACkD,MAAO;MAACC,KAAK,EAAC;IAAQ,CAAY,CAAC,eAClIrH,KAAA,CAAAgG,aAAA,CAAC7F,IAAI,EAAA8F,QAAA,KAAK,IAAI,CAACC,qBAAqB,CAAC,MAAM,GAAET,KAAK,GAAC,OAAO,CAAC;MAACW,KAAK,EAAE,CAAC,IAAI,CAACC,MAAM,CAACiB,SAAS,EAAEvB,UAAU,GAAG,IAAI,CAACM,MAAM,CAACU,eAAe,GAAG,IAAI;IAAE,IAAE7C,IAAI,CAACG,UAAU,IAAIH,IAAI,CAACI,YAAmB,CAAC,EACzL,CAAC,IAAI,CAACqB,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAACjD,KAAK,CAACd,KAAK,CAAC6E,QAAQ,gBAAGzG,KAAA,CAAAgG,aAAA,CAAC7E,MAAM;MAAE6F,EAAE,EAAE,IAAI,CAACC,SAAS,CAAC,UAAU,CAAE;MAACP,SAAS,EAAE,aAAc;MAACC,QAAQ,EAAE,EAAG;MAACN,MAAM,EAAE,IAAI,CAACA,MAAM,CAACkB,SAAU;MAACC,KAAK,EAAEA,CAAA,KAAM,IAAI,CAAChC,UAAU,CAACtB,IAAI,EAAEuB,KAAK;IAAE,CAAS,CAAC,GAAG,IAC9M,CAAC;EAEvB;EAEA3C,uBAAuBA,CAAA,EAAG;IACtB,IAAI,IAAI,CAACJ,KAAK,CAACuB,SAAS,IAAI,IAAI,CAACvB,KAAK,CAACuB,SAAS,CAAC5B,MAAM,IAAI,IAAI,CAACQ,cAAc,EAAE;MAC5E,MAAM4E,aAAa,GAAG/G,MAAM,CAAC,IAAI,CAACgC,KAAK,CAACuB,SAAS,EAAGC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC;MAC3E,IAAIsD,aAAa,CAACpF,MAAM,EAAE;QACxB,IAAI,CAACC,WAAW,CAAC;UACfC,SAAS,EAAEkF;QACb,CAAiB,CAAC;MACpB;MACA,IAAI,CAAC5E,cAAc,GAAG,KAAK;IAC/B;EACJ;EAEA6E,iBAAiBA,CAAA,EAAS;IACxB,KAAK,CAACA,iBAAiB,CAAC,CAAC;IACzB,IAAI,CAAC5E,uBAAuB,CAAC,CAAC;EAChC;EAEA6E,kBAAkBA,CAACC,SAAuB,EAAEC,SAAuB,EAAE;IACnE,KAAK,CAACF,kBAAkB,CAACC,SAAS,EAAEC,SAAS,CAAC;IAC9C,IAAIA,SAAS,CAACtF,SAAS,KAAK,IAAI,CAACG,KAAK,CAACH,SAAS,EAAE;MAAA,IAAAuF,gBAAA;MAChD,CAAAA,gBAAA,OAAI,CAAC/F,SAAS,cAAA+F,gBAAA,uBAAdA,gBAAA,CAAgBC,eAAe,CAAC,CAAC;IACnC;EACF;EAEAC,YAAYA,CAACpG,KAAmB,EAAE;IAChC,MAAMqG,KAAK,GAAG,IAAI,CAACvF,KAAK,CAACH,SAAS;IAClC,oBAAQvC,KAAA,CAAAgG,aAAA,CAAC/F,IAAI;MAACmG,KAAK,EAAE,IAAI,CAACC,MAAM,CAAC6B;IAAK,gBAEpClI,KAAA,CAAAgG,aAAA,CAAC/F,IAAI;MAACmG,KAAK,EAAE,IAAI,CAACC,MAAM,CAAC8B;IAAa,GAElC,IAAI,CAACxC,aAAa,CAAC,CAAC,GAAG,IAAI,CAACjD,KAAK,CAACuB,SAAS,CAACG,GAAG,CAAC,CAACF,IAAS,EAAEuB,KAAU,KAAK,IAAI,CAACK,UAAU,CAAC5B,IAAI,EAAEuB,KAAK,CAAC,CAAC,GAAG,IAAI,EAE/G7D,KAAK,CAACiE,UAAU,IAAI,CAAC,IAAI,CAACF,aAAa,CAAC,CAAC,gBACzC3F,KAAA,CAAAgG,aAAA,CAAC/F,IAAI;MAACmG,KAAK,EAAE,CAAC,IAAI,CAACC,MAAM,CAAC+B,eAAe,EAAE;QAACC,aAAa,EAAEzG,KAAK,CAAC0G,aAAa,KAAK,OAAO,GAAG,QAAQ,GAAG;MAAgB,CAAC;IAAE,gBACzHtI,KAAA,CAAAgG,aAAA,CAAChF,QAAQ;MACPgG,EAAE,EAAE,IAAI,CAACC,SAAS,CAAC,QAAQ,CAAE;MAC7B/E,IAAI,EAAC,iBAAiB;MACtBmE,MAAM,EAAE,IAAI,CAACA,MAAM,CAACkC,MAAO;MAC3BC,WAAW,EAAE,IAAI,CAAC9F,KAAK,CAAC6C,QAAQ,GAAG,IAAI,CAACkD,cAAc,GAAG7G,KAAK,CAAC4G,WAAY;MAC3EE,QAAQ,EAAE,IAAI,CAACA,QAAS;MACxBC,OAAO,EAAE/G,KAAK,CAAC+G,OAAQ;MACvBC,SAAS,EAAEhH,KAAK,CAACgH,SAAU;MAC3BC,QAAQ,EAAEjH,KAAK,CAACiH,QAAS;MACzBC,SAAS,EAAElH,KAAK,CAACkH,SAAU;MAC3BrC,QAAQ,EAAE7E,KAAK,CAAC6E,QAAQ,IAAI7E,KAAK,CAACmH,QAAQ,IAAI,IAAI,CAACrG,KAAK,CAAC6C,QAAS;MAClEwD,QAAQ,EAAEnH,KAAK,CAACmH,QAAS;MACzBC,iBAAiB,EAAEpH,KAAK,CAACoH,iBAAkB;MAC3CC,oBAAoB,EAAErH,KAAK,CAACqH,oBAAqB;MACjDC,eAAe,EAAEtH,KAAK,CAACsH,eAAgB;MACvC5E,YAAY,EAAE1C,KAAK,CAAC0C,YAAa;MACjCQ,SAAS,EAAElD,KAAK,CAACkD,SAAU;MAC3BqE,QAAQ,EAAE,IAAI,CAACpG,OAAO,CAACqG,IAAI,CAAC,IAAI,CAAE;MAClCC,QAAQ,EAAEA,CAAA,KAAM;QAAA,IAAAC,oBAAA,EAAAC,qBAAA;QACd,IAAI,CAAC1G,cAAc,GAAG,KAAK;QAC3B,EAAAyG,oBAAA,OAAI,CAAC1H,KAAK,CAAC8G,QAAQ,cAAAY,oBAAA,uBAAnBA,oBAAA,CAAqBE,iBAAiB,OAAAD,qBAAA,GAAI,IAAI,CAAC3H,KAAK,CAAC8G,QAAQ,cAAAa,qBAAA,uBAAnBA,qBAAA,CAAqBC,iBAAiB,CAAC,IAAI,CAAC;MACxF,CAAE;MACFC,cAAc,EAAE,KAAM;MACtBC,SAAS,EAAE,KAAM;MACjBC,IAAI,EAAE/H,KAAK,CAACiH,QAAQ,KAAK,CAAC,GAAG,cAAc,GAAG;IAAS,CAAC,CAAC,eACzD7I,KAAA,CAAAgG,aAAA,CAAC/F,IAAI;MAACmG,KAAK,EAAE;QAAEiC,aAAa,EAAE,KAAK;QAAEuB,QAAQ,EAAE;MAAM;IAAE,GACpD3B,KAAK,IAAIA,KAAK,CAAC5F,MAAM,GACtB4F,KAAK,CAAC7D,GAAG,CAAC,CAACF,IAAS,EAAEuB,KAAU,KAAK,IAAI,CAACK,UAAU,CAAC5B,IAAI,EAAEuB,KAAK,CAAC,CAAC,GAChE,IACE,CACJ,CAAC,GACJ,IACD,CACF,CAAC;EACT;AACF"}