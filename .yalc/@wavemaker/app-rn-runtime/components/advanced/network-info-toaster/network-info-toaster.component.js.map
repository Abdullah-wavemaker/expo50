{"version":3,"names":["React","Text","TouchableOpacity","View","NetworkService","BaseComponent","BaseComponentState","ToastConsumer","WmNetworkInfoToasterProps","DEFAULT_CLASS","isEqual","WmNetworkInfoToasterState","constructor","arguments","_defineProperty","WmNetworkInfoToaster","props","updateState","newtworkState","getState","showToast","isConnected","cleanup","push","notifier","subscribe","networkState","state","getToastContent","createElement","style","styles","root","_background","_extends","getTestPropsForLabel","text","appLocale","messages","MESSAGE_SERVICE_CONNECTED","getTestPropsForAction","action","onPress","_close","actionText","LABEL_HIDE_NETWORK_INFO","isConnecting","MESSAGE_SERVICE_CONNECTING","isServiceAvailable","MESSAGE_SERVICE_AVAILABLE","actionSeparator","LABEL_CONNECT_TO_SERVICE","isNetworkAvailable","MESSAGE_NETWORK_NOT_AVAILABLE","MESSAGE_SERVICE_NOT_AVAILABLE","renderWidget","options","content","onClose","toastService","hideToast"],"sources":["network-info-toaster.component.tsx"],"sourcesContent":["import React from 'react';\nimport { Text, TouchableOpacity, View } from 'react-native';\nimport NetworkService, { NetworkState } from '@wavemaker/app-rn-runtime/core/network.service';\nimport { BaseComponent, BaseComponentState } from '@wavemaker/app-rn-runtime/core/base.component';\nimport { ToastConsumer, ToastOptions, ToastService } from '@wavemaker/app-rn-runtime/core/toast.service';\n\nimport WmNetworkInfoToasterProps from './network-info-toaster.props';\nimport { DEFAULT_CLASS, WmNetworkInfoToasterStyles } from './network-info-toaster.styles';\nimport { isEqual } from 'lodash-es';\n\nexport class WmNetworkInfoToasterState extends BaseComponentState<WmNetworkInfoToasterProps> {\n  newtworkState = {} as NetworkState;\n  showToast = false;\n}\n\nexport default class WmNetworkInfoToaster extends BaseComponent<WmNetworkInfoToasterProps, WmNetworkInfoToasterState, WmNetworkInfoToasterStyles> {\n  options = {} as ToastOptions;\n  private _close: Function = null as any;\n\n  constructor(props: WmNetworkInfoToasterProps) {\n    super(props, DEFAULT_CLASS, new WmNetworkInfoToasterProps(), new WmNetworkInfoToasterState());\n    this.updateState({\n      newtworkState: NetworkService.getState(),\n      showToast: !NetworkService.isConnected()\n    } as WmNetworkInfoToasterState);\n    this.cleanup.push(\n      NetworkService.notifier.subscribe('onNetworkStateChange', (networkState: NetworkState) => {\n        if (!isEqual(networkState, this.state.newtworkState)) {\n          this.updateState({\n            newtworkState: networkState,\n            showToast: true\n          } as WmNetworkInfoToasterState);\n        }\n      }\n    ));\n  }\n\n  getToastContent() {\n    if (this.state.newtworkState.isConnected) { \n      return (\n      <View style={this.styles.root}>\n        {this._background}\n        <Text {...this.getTestPropsForLabel('msg')} style={this.styles.text}>{this.props.appLocale.messages.MESSAGE_SERVICE_CONNECTED}</Text>\n        <TouchableOpacity {...this.getTestPropsForAction('close')} style={this.styles.action} onPress={() => this._close()}>\n          <Text style={this.styles.actionText}>{this.props.appLocale.messages.LABEL_HIDE_NETWORK_INFO}</Text>\n        </TouchableOpacity>\n      </View>);\n    }\n    if (this.state.newtworkState.isConnecting) { \n      return (\n        <View style={this.styles.root}>\n          {this._background}\n          <Text {...this.getTestPropsForLabel('msg')} style={this.styles.text}>{this.props.appLocale.messages.MESSAGE_SERVICE_CONNECTING}</Text>\n        </View>);\n    }\n    if (this.state.newtworkState.isServiceAvailable) { \n      return (\n      <View style={this.styles.root}>\n        {this._background}\n        <Text {...this.getTestPropsForLabel('msg')} style={this.styles.text}>{this.props.appLocale.messages.MESSAGE_SERVICE_AVAILABLE}</Text>\n        <TouchableOpacity {...this.getTestPropsForAction('close')} style={this.styles.action} onPress={() => this._close()}>\n          <Text style={this.styles.actionText}>{this.props.appLocale.messages.LABEL_HIDE_NETWORK_INFO}</Text>\n        </TouchableOpacity>\n          <Text style={this.styles.actionSeparator}>|</Text>\n        <TouchableOpacity {...this.getTestPropsForAction('connect')} style={this.styles.action}>\n          <Text style={this.styles.actionText}>{this.props.appLocale.messages.LABEL_CONNECT_TO_SERVICE}</Text>\n        </TouchableOpacity>\n      </View>);\n    }\n    if (!this.state.newtworkState.isNetworkAvailable) { \n      return (\n      <View style={this.styles.root}>\n        {this._background}\n        <Text {...this.getTestPropsForLabel('msg')} style={this.styles.text}>{this.props.appLocale.messages.MESSAGE_NETWORK_NOT_AVAILABLE}</Text>\n        <TouchableOpacity {...this.getTestPropsForAction('close')} style={this.styles.action} onPress={() => this._close()}>\n          <Text style={this.styles.actionText}>{this.props.appLocale.messages.LABEL_HIDE_NETWORK_INFO}</Text>\n        </TouchableOpacity>\n      </View>);\n    }\n    return (\n      <View style={this.styles.root}>\n        {this._background}\n        <Text {...this.getTestPropsForLabel('msg')} style={this.styles.text}>{this.props.appLocale.messages.MESSAGE_SERVICE_NOT_AVAILABLE}</Text>\n        <TouchableOpacity  {...this.getTestPropsForAction('close')} style={this.styles.action} onPress={() => this._close()}>\n          <Text style={this.styles.actionText}>{this.props.appLocale.messages.LABEL_HIDE_NETWORK_INFO}</Text>\n        </TouchableOpacity>\n      </View>);\n  }\n\n  renderWidget(props: WmNetworkInfoToasterProps) {\n    this.options.content = this.getToastContent();\n    this.options.onClose = () => {\n      this._close = null as any;\n      this.updateState({\n        showToast : false\n      } as WmNetworkInfoToasterState);\n    };\n    return this.options.content && this.state.showToast ? (\n      <ToastConsumer>\n        {(toastService: ToastService) => {\n          this._close = () => toastService.hideToast(this.options);\n          toastService.showToast(this.options)\n          return null;\n        }}\n      </ToastConsumer>\n    ) : null; \n  }\n}\n"],"mappings":"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"}