{"version":3,"names":["i","EventNotifier","constructor","_defineProperty","setParent","parent","removeFromParent","children","push","notify","event","args","propagate","listeners","find","l","apply","e","console","error","forEach","c","subscribe","fn","eventListeners","findIndex","fni","splice","indexOf","destroy"],"sources":["event-notifier.ts"],"sourcesContent":["let i = 1;\nexport default class EventNotifier {\n    public name = '';\n    public id = i++;\n    private listeners = {} as any;\n    private parent: EventNotifier = null as any;\n    private children: EventNotifier[] = [];\n\n    setParent(parent: EventNotifier) {\n        if (parent !== this.parent) {\n            this.removeFromParent();\n            this.parent = parent;\n            this.parent.children.push(this);\n        }\n    }\n\n    public notify(event: string, args: any[]) {\n        let propagate = true;\n        if (this.listeners[event]) {\n            propagate = !this.listeners[event].find((l: Function) => {\n                try {\n                    return (l && l.apply(null, args)) === false;\n                } catch(e) {\n                    console.error(e);\n                }\n                return true;\n            });\n        }\n        if (propagate) {\n            this.children.forEach((c) => {\n                c.notify(event, args);\n            });\n        }\n    }\n\n    public subscribe(event: string, fn: Function) {\n        this.listeners[event] = this.listeners[event] || [];\n        this.listeners[event].push(fn);\n        return () => {\n            const eventListeners = this.listeners[event];\n            const i = eventListeners.findIndex((fni: Function) => fni === fn);\n            eventListeners.splice(i, 1);\n        };\n    }\n\n    private removeFromParent() {\n        if (this.parent) {\n            const i = this.parent.children.indexOf(this) || -1;\n            if (i >= 0) {\n                this.parent.children.splice(i, 1);\n            }\n            this.parent = null as any;\n        }\n    }\n\n    public destroy() {\n        this.removeFromParent();\n    }\n}"],"mappings":";;;AAAA,IAAIA,CAAC,GAAG,CAAC;AACT,eAAe,MAAMC,aAAa,CAAC;EAAAC,YAAA;IAAAC,eAAA,eACjB,EAAE;IAAAA,eAAA,aACJH,CAAC,EAAE;IAAAG,eAAA,oBACK,CAAC,CAAC;IAAAA,eAAA,iBACU,IAAI;IAAAA,eAAA,mBACA,EAAE;EAAA;EAEtCC,SAASA,CAACC,MAAqB,EAAE;IAC7B,IAAIA,MAAM,KAAK,IAAI,CAACA,MAAM,EAAE;MACxB,IAAI,CAACC,gBAAgB,CAAC,CAAC;MACvB,IAAI,CAACD,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACA,MAAM,CAACE,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAC;IACnC;EACJ;EAEOC,MAAMA,CAACC,KAAa,EAAEC,IAAW,EAAE;IACtC,IAAIC,SAAS,GAAG,IAAI;IACpB,IAAI,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,EAAE;MACvBE,SAAS,GAAG,CAAC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,CAACI,IAAI,CAAEC,CAAW,IAAK;QACrD,IAAI;UACA,OAAO,CAACA,CAAC,IAAIA,CAAC,CAACC,KAAK,CAAC,IAAI,EAAEL,IAAI,CAAC,MAAM,KAAK;QAC/C,CAAC,CAAC,OAAMM,CAAC,EAAE;UACPC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;QACpB;QACA,OAAO,IAAI;MACf,CAAC,CAAC;IACN;IACA,IAAIL,SAAS,EAAE;MACX,IAAI,CAACL,QAAQ,CAACa,OAAO,CAAEC,CAAC,IAAK;QACzBA,CAAC,CAACZ,MAAM,CAACC,KAAK,EAAEC,IAAI,CAAC;MACzB,CAAC,CAAC;IACN;EACJ;EAEOW,SAASA,CAACZ,KAAa,EAAEa,EAAY,EAAE;IAC1C,IAAI,CAACV,SAAS,CAACH,KAAK,CAAC,GAAG,IAAI,CAACG,SAAS,CAACH,KAAK,CAAC,IAAI,EAAE;IACnD,IAAI,CAACG,SAAS,CAACH,KAAK,CAAC,CAACF,IAAI,CAACe,EAAE,CAAC;IAC9B,OAAO,MAAM;MACT,MAAMC,cAAc,GAAG,IAAI,CAACX,SAAS,CAACH,KAAK,CAAC;MAC5C,MAAMV,CAAC,GAAGwB,cAAc,CAACC,SAAS,CAAEC,GAAa,IAAKA,GAAG,KAAKH,EAAE,CAAC;MACjEC,cAAc,CAACG,MAAM,CAAC3B,CAAC,EAAE,CAAC,CAAC;IAC/B,CAAC;EACL;EAEQM,gBAAgBA,CAAA,EAAG;IACvB,IAAI,IAAI,CAACD,MAAM,EAAE;MACb,MAAML,CAAC,GAAG,IAAI,CAACK,MAAM,CAACE,QAAQ,CAACqB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MAClD,IAAI5B,CAAC,IAAI,CAAC,EAAE;QACR,IAAI,CAACK,MAAM,CAACE,QAAQ,CAACoB,MAAM,CAAC3B,CAAC,EAAE,CAAC,CAAC;MACrC;MACA,IAAI,CAACK,MAAM,GAAG,IAAW;IAC7B;EACJ;EAEOwB,OAAOA,CAAA,EAAG;IACb,IAAI,CAACvB,gBAAgB,CAAC,CAAC;EAC3B;AACJ"}