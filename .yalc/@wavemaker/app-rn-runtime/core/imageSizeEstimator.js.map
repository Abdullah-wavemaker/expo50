{"version":3,"names":["remove","Image","ImageSizeEstimator","constructor","_defineProperty","Map","createRequest","requestId","onComplete","request","cancel","requests","has","get","getImageSize","imgSrc","getSize","width","height","reqs","map","req","delete","setTimeout","_this$requests$get","push","reqQueue","set"],"sources":["imageSizeEstimator.ts"],"sourcesContent":["import { remove } from \"lodash-es\";\nimport { Image } from \"react-native\";\n\ninterface Request {\n    onComplete: (width: number, height: number) => void\n    cancel : () => void\n}\n\nclass ImageSizeEstimator {\n    requestId = 1;\n  \n    requests: Map<String, Request[]> = new Map<string, Request[]>();\n\n    private createRequest(requestId: string, onComplete: (width: number, height: number) => void) {\n      const request = {} as Request;\n      request.onComplete = onComplete,\n      request.cancel = () => {\n          if (this.requests.has(requestId)) {\n            remove(this.requests.get(requestId) || [], request);\n          }\n      };\n      return request;\n    }\n\n    private getImageSize(imgSrc: string) {\n      Image.getSize(imgSrc, (width: number, height: number) => {\n        const reqs = this.requests.get(imgSrc);\n        if (reqs) {\n          reqs.map(req => {\n            req.onComplete && req.onComplete(width, height);\n          });\n          this.requests.delete(imgSrc);\n        }\n      }, () => this.requests.delete(imgSrc));\n    }\n  \n    getSize(imgSrc: string, onComplete: (width: number, height: number) => void) {\n      if (!imgSrc) {\n        setTimeout(() => onComplete(0, 0), 100);\n        return () => {};\n      }\n      const requestId = imgSrc;\n      const request = this.createRequest(requestId, onComplete);\n      if (this.requests.has(requestId)) {\n        this.requests.get(requestId)?.push(request);\n      } else {\n        const reqQueue = [] as Request[];\n        this.requests.set(requestId, reqQueue);\n        reqQueue.push(request)\n        this.getImageSize(requestId);\n      }\n      return request.cancel;\n    }\n  }\n  \nexport default new ImageSizeEstimator();"],"mappings":";;;AAAA,SAASA,MAAM,QAAQ,WAAW;AAClC,SAASC,KAAK,QAAQ,cAAc;AAOpC,MAAMC,kBAAkB,CAAC;EAAAC,YAAA;IAAAC,eAAA,oBACT,CAAC;IAAAA,eAAA,mBAEsB,IAAIC,GAAG,CAAoB,CAAC;EAAA;EAEvDC,aAAaA,CAACC,SAAiB,EAAEC,UAAmD,EAAE;IAC5F,MAAMC,OAAO,GAAG,CAAC,CAAY;IAC7BA,OAAO,CAACD,UAAU,GAAGA,UAAU,EAC/BC,OAAO,CAACC,MAAM,GAAG,MAAM;MACnB,IAAI,IAAI,CAACC,QAAQ,CAACC,GAAG,CAACL,SAAS,CAAC,EAAE;QAChCP,MAAM,CAAC,IAAI,CAACW,QAAQ,CAACE,GAAG,CAACN,SAAS,CAAC,IAAI,EAAE,EAAEE,OAAO,CAAC;MACrD;IACJ,CAAC;IACD,OAAOA,OAAO;EAChB;EAEQK,YAAYA,CAACC,MAAc,EAAE;IACnCd,KAAK,CAACe,OAAO,CAACD,MAAM,EAAE,CAACE,KAAa,EAAEC,MAAc,KAAK;MACvD,MAAMC,IAAI,GAAG,IAAI,CAACR,QAAQ,CAACE,GAAG,CAACE,MAAM,CAAC;MACtC,IAAII,IAAI,EAAE;QACRA,IAAI,CAACC,GAAG,CAACC,GAAG,IAAI;UACdA,GAAG,CAACb,UAAU,IAAIa,GAAG,CAACb,UAAU,CAACS,KAAK,EAAEC,MAAM,CAAC;QACjD,CAAC,CAAC;QACF,IAAI,CAACP,QAAQ,CAACW,MAAM,CAACP,MAAM,CAAC;MAC9B;IACF,CAAC,EAAE,MAAM,IAAI,CAACJ,QAAQ,CAACW,MAAM,CAACP,MAAM,CAAC,CAAC;EACxC;EAEAC,OAAOA,CAACD,MAAc,EAAEP,UAAmD,EAAE;IAC3E,IAAI,CAACO,MAAM,EAAE;MACXQ,UAAU,CAAC,MAAMf,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;MACvC,OAAO,MAAM,CAAC,CAAC;IACjB;IACA,MAAMD,SAAS,GAAGQ,MAAM;IACxB,MAAMN,OAAO,GAAG,IAAI,CAACH,aAAa,CAACC,SAAS,EAAEC,UAAU,CAAC;IACzD,IAAI,IAAI,CAACG,QAAQ,CAACC,GAAG,CAACL,SAAS,CAAC,EAAE;MAAA,IAAAiB,kBAAA;MAChC,CAAAA,kBAAA,OAAI,CAACb,QAAQ,CAACE,GAAG,CAACN,SAAS,CAAC,cAAAiB,kBAAA,uBAA5BA,kBAAA,CAA8BC,IAAI,CAAChB,OAAO,CAAC;IAC7C,CAAC,MAAM;MACL,MAAMiB,QAAQ,GAAG,EAAe;MAChC,IAAI,CAACf,QAAQ,CAACgB,GAAG,CAACpB,SAAS,EAAEmB,QAAQ,CAAC;MACtCA,QAAQ,CAACD,IAAI,CAAChB,OAAO,CAAC;MACtB,IAAI,CAACK,YAAY,CAACP,SAAS,CAAC;IAC9B;IACA,OAAOE,OAAO,CAACC,MAAM;EACvB;AACF;AAEF,eAAe,IAAIR,kBAAkB,CAAC,CAAC"}