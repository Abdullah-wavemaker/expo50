{"version":3,"names":["parseInt","moment","CURRENCY_INFO","injector","DateToStringFormatter","format","input","getTime","replace","_moment","isValid","toString","PrependFormatter","prefix","undefined","AppendFormatter","suffix","NumberToStringFormatter","fractionSize","i18nService","I18nService","get","selectedLocale","getSelectedLocale","formatCurrency","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","isNaN","CurrencyFormatter","data","currencySymbol","fracSize","_currencySymbol","symbol","_val","isNegativeNumber","startsWith","TimeFromNowFormatter","timestamp","fromNow","StringToNumberFormatter","createFormatter","key","defaultFormatter","_len","arguments","length","params","Array","_key","output","customFormatter","formatters","Map"],"sources":["formatters.ts"],"sourcesContent":["import { parseInt } from 'lodash';\nimport moment from 'moment';\nimport { CURRENCY_INFO, Currency } from './constants/currency-constants';\nimport { DateFormatter } from '@wavemaker/variables/src/types/date-formatter';\nimport injector from '@wavemaker/app-rn-runtime/core/injector';\n\nexport interface Formatter {\n    format: (input: any, ...params: any) => any;\n}\n\nexport class DateToStringFormatter implements DateFormatter {\n\n    public format(input: Date, format: string): string {\n        if (!input) {\n            return '';\n        }\n        if (format === 'timestamp') {\n            return input.getTime() + '';\n        }\n        format = format.replace(/d/g, 'D');\n        const _moment = moment(input, [\n            \"M/D/YYYY\", \"M-D-YYYY\", \"M.D.YYYY\",\n            \"M/DD/YYYY\", \"M-DD-YYYY\", \"M.DD.YYYY\",\n            \"YYYY/M/D\", \"YYYY-M-D\", \"YYYY.M.D\",\n            \"MM/D/YYYY\", \"MM-D-YYYY\", \"MM.D.YYYY\",\n            \"M/D/YY\", \"M-D-YY\", \"M.D.YY\", \"D MMM YYYY\",\n            \"MM/DD/YYYY\", \"MM-DD-YYYY\", \"MM.DD.YYYY\",\n            \"YYYY/MM/DD\", \"YYYY-MM-DD\", \"YYYY.MM.DD\",\n            \"MM/DD/YY\", \"MM-DD-YY\", \"MM.DD.YY\", \"DD MMM YYYY\"\n        ], true);\n        return _moment.isValid() ? _moment.format(format) : input.toString();\n    }\n}\n\nexport class PrependFormatter implements Formatter {\n\n    public format(input: any, prefix: string): string {\n        return (prefix || '') + (input !== null || input != undefined ? input : '');\n    }\n}\n\nexport class AppendFormatter implements Formatter {\n\n    public format(input: any, suffix: string): string {\n        return (input !== null || input != undefined ? input : '') + (suffix || '');\n    }\n}\n\nexport class NumberToStringFormatter implements Formatter {\n\n    public format(input: number, fractionSize: number): string {\n        const i18nService = injector.I18nService.get();\n        const selectedLocale = i18nService.getSelectedLocale();\n        let formatCurrency = new Intl.NumberFormat(selectedLocale,{\n            minimumFractionDigits: fractionSize,\n            maximumFractionDigits: fractionSize,\n        });\n        return isNaN(input) ? '': formatCurrency.format(input);\n    }\n}\n\nexport class CurrencyFormatter implements Formatter {\n\n    public format(data: number, currencySymbol: string, fracSize: number) {\n        const _currencySymbol = ((((CURRENCY_INFO as any)[currencySymbol]) || {})  as Currency).symbol || currencySymbol || '';\n        let _val = new NumberToStringFormatter().format(data, fracSize);\n        const isNegativeNumber = _val.startsWith('-');\n        if (isNegativeNumber) {\n            _val = _val.replace('-','');\n        }\n        return _val ? isNegativeNumber ? '-'+ _currencySymbol +_val :_currencySymbol + _val : '';\n    }\n}\n\nexport class TimeFromNowFormatter implements Formatter {\n    public format(timestamp: Date) {\n        return timestamp ? moment(timestamp).fromNow() : undefined;\n    }\n}\n\nexport class StringToNumberFormatter implements Formatter {\n    public format(input: string) {\n        return parseInt(input);\n    }\n}\n\nconst createFormatter = (key: string, defaultFormatter: Formatter) => {\n    return {\n        format: (input: any, ...params: any) => {\n            const output = defaultFormatter.format(input, ...params);\n            const customFormatter = formatters.get(`custom.${key}`);\n            return customFormatter ? customFormatter.format(output, ...params): output;\n        }\n    };\n};\n\nconst formatters = new Map<string, Formatter>([\n    ['numberToString', createFormatter('numberToString' , new NumberToStringFormatter())],\n    ['prefix', createFormatter('prefix', new PrependFormatter())],\n    ['suffix', createFormatter('suffix', new AppendFormatter())],\n    ['stringToNumber', createFormatter('stringToNumber',new StringToNumberFormatter())],\n    ['timeFromNow', createFormatter('timeFromNow', new TimeFromNowFormatter())],\n    ['toDate', createFormatter('toDate', new DateToStringFormatter())],\n    ['toCurrency', createFormatter('toCurrency', new CurrencyFormatter())]\n]);\n\nexport default formatters;"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,QAAQ;AACjC,OAAOC,MAAM,MAAM,QAAQ;AAC3B,SAASC,aAAa,QAAkB,gCAAgC;AAExE,OAAOC,QAAQ,MAAM,yCAAyC;AAM9D,OAAO,MAAMC,qBAAqB,CAA0B;EAEjDC,MAAMA,CAACC,KAAW,EAAED,MAAc,EAAU;IAC/C,IAAI,CAACC,KAAK,EAAE;MACR,OAAO,EAAE;IACb;IACA,IAAID,MAAM,KAAK,WAAW,EAAE;MACxB,OAAOC,KAAK,CAACC,OAAO,CAAC,CAAC,GAAG,EAAE;IAC/B;IACAF,MAAM,GAAGA,MAAM,CAACG,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;IAClC,MAAMC,OAAO,GAAGR,MAAM,CAACK,KAAK,EAAE,CAC1B,UAAU,EAAE,UAAU,EAAE,UAAU,EAClC,WAAW,EAAE,WAAW,EAAE,WAAW,EACrC,UAAU,EAAE,UAAU,EAAE,UAAU,EAClC,WAAW,EAAE,WAAW,EAAE,WAAW,EACrC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAC1C,YAAY,EAAE,YAAY,EAAE,YAAY,EACxC,YAAY,EAAE,YAAY,EAAE,YAAY,EACxC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,aAAa,CACpD,EAAE,IAAI,CAAC;IACR,OAAOG,OAAO,CAACC,OAAO,CAAC,CAAC,GAAGD,OAAO,CAACJ,MAAM,CAACA,MAAM,CAAC,GAAGC,KAAK,CAACK,QAAQ,CAAC,CAAC;EACxE;AACJ;AAEA,OAAO,MAAMC,gBAAgB,CAAsB;EAExCP,MAAMA,CAACC,KAAU,EAAEO,MAAc,EAAU;IAC9C,OAAO,CAACA,MAAM,IAAI,EAAE,KAAKP,KAAK,KAAK,IAAI,IAAIA,KAAK,IAAIQ,SAAS,GAAGR,KAAK,GAAG,EAAE,CAAC;EAC/E;AACJ;AAEA,OAAO,MAAMS,eAAe,CAAsB;EAEvCV,MAAMA,CAACC,KAAU,EAAEU,MAAc,EAAU;IAC9C,OAAO,CAACV,KAAK,KAAK,IAAI,IAAIA,KAAK,IAAIQ,SAAS,GAAGR,KAAK,GAAG,EAAE,KAAKU,MAAM,IAAI,EAAE,CAAC;EAC/E;AACJ;AAEA,OAAO,MAAMC,uBAAuB,CAAsB;EAE/CZ,MAAMA,CAACC,KAAa,EAAEY,YAAoB,EAAU;IACvD,MAAMC,WAAW,GAAGhB,QAAQ,CAACiB,WAAW,CAACC,GAAG,CAAC,CAAC;IAC9C,MAAMC,cAAc,GAAGH,WAAW,CAACI,iBAAiB,CAAC,CAAC;IACtD,IAAIC,cAAc,GAAG,IAAIC,IAAI,CAACC,YAAY,CAACJ,cAAc,EAAC;MACtDK,qBAAqB,EAAET,YAAY;MACnCU,qBAAqB,EAAEV;IAC3B,CAAC,CAAC;IACF,OAAOW,KAAK,CAACvB,KAAK,CAAC,GAAG,EAAE,GAAEkB,cAAc,CAACnB,MAAM,CAACC,KAAK,CAAC;EAC1D;AACJ;AAEA,OAAO,MAAMwB,iBAAiB,CAAsB;EAEzCzB,MAAMA,CAAC0B,IAAY,EAAEC,cAAsB,EAAEC,QAAgB,EAAE;IAClE,MAAMC,eAAe,GAAG,CAAIhC,aAAa,CAAS8B,cAAc,CAAC,IAAK,CAAC,CAAC,EAAgBG,MAAM,IAAIH,cAAc,IAAI,EAAE;IACtH,IAAII,IAAI,GAAG,IAAInB,uBAAuB,CAAC,CAAC,CAACZ,MAAM,CAAC0B,IAAI,EAAEE,QAAQ,CAAC;IAC/D,MAAMI,gBAAgB,GAAGD,IAAI,CAACE,UAAU,CAAC,GAAG,CAAC;IAC7C,IAAID,gBAAgB,EAAE;MAClBD,IAAI,GAAGA,IAAI,CAAC5B,OAAO,CAAC,GAAG,EAAC,EAAE,CAAC;IAC/B;IACA,OAAO4B,IAAI,GAAGC,gBAAgB,GAAG,GAAG,GAAEH,eAAe,GAAEE,IAAI,GAAEF,eAAe,GAAGE,IAAI,GAAG,EAAE;EAC5F;AACJ;AAEA,OAAO,MAAMG,oBAAoB,CAAsB;EAC5ClC,MAAMA,CAACmC,SAAe,EAAE;IAC3B,OAAOA,SAAS,GAAGvC,MAAM,CAACuC,SAAS,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG3B,SAAS;EAC9D;AACJ;AAEA,OAAO,MAAM4B,uBAAuB,CAAsB;EAC/CrC,MAAMA,CAACC,KAAa,EAAE;IACzB,OAAON,QAAQ,CAACM,KAAK,CAAC;EAC1B;AACJ;AAEA,MAAMqC,eAAe,GAAGA,CAACC,GAAW,EAAEC,gBAA2B,KAAK;EAClE,OAAO;IACHxC,MAAM,EAAE,SAAAA,CAACC,KAAU,EAAqB;MAAA,SAAAwC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAhBC,MAAM,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAANF,MAAM,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;MAAA;MAC1B,MAAMC,MAAM,GAAGP,gBAAgB,CAACxC,MAAM,CAACC,KAAK,EAAE,GAAG2C,MAAM,CAAC;MACxD,MAAMI,eAAe,GAAGC,UAAU,CAACjC,GAAG,CAAE,UAASuB,GAAI,EAAC,CAAC;MACvD,OAAOS,eAAe,GAAGA,eAAe,CAAChD,MAAM,CAAC+C,MAAM,EAAE,GAAGH,MAAM,CAAC,GAAEG,MAAM;IAC9E;EACJ,CAAC;AACL,CAAC;AAED,MAAME,UAAU,GAAG,IAAIC,GAAG,CAAoB,CAC1C,CAAC,gBAAgB,EAAEZ,eAAe,CAAC,gBAAgB,EAAG,IAAI1B,uBAAuB,CAAC,CAAC,CAAC,CAAC,EACrF,CAAC,QAAQ,EAAE0B,eAAe,CAAC,QAAQ,EAAE,IAAI/B,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAC7D,CAAC,QAAQ,EAAE+B,eAAe,CAAC,QAAQ,EAAE,IAAI5B,eAAe,CAAC,CAAC,CAAC,CAAC,EAC5D,CAAC,gBAAgB,EAAE4B,eAAe,CAAC,gBAAgB,EAAC,IAAID,uBAAuB,CAAC,CAAC,CAAC,CAAC,EACnF,CAAC,aAAa,EAAEC,eAAe,CAAC,aAAa,EAAE,IAAIJ,oBAAoB,CAAC,CAAC,CAAC,CAAC,EAC3E,CAAC,QAAQ,EAAEI,eAAe,CAAC,QAAQ,EAAE,IAAIvC,qBAAqB,CAAC,CAAC,CAAC,CAAC,EAClE,CAAC,YAAY,EAAEuC,eAAe,CAAC,YAAY,EAAE,IAAIb,iBAAiB,CAAC,CAAC,CAAC,CAAC,CACzE,CAAC;AAEF,eAAewB,UAAU"}