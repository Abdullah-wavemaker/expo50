{"version":3,"names":["Dimensions","EventNotifier","SCREEN_ORIENTATION","LANDSCAPE","PORTRAIT","EVENTS","ORIENTATION_CHANGE","SIZE_CHANGE","ViewPort","constructor","_defineProperty","dim","get","width","height","orientation","addEventListener","notify"],"sources":["viewport.ts"],"sourcesContent":["import { Dimensions } from \"react-native\";\nimport EventNotifier from \"./event-notifier\";\n\n\nexport const SCREEN_ORIENTATION = {\n    LANDSCAPE: 'LANDSCAPE',\n    PORTRAIT: 'PORTRAIT'\n};\n\nexport const EVENTS = {\n    ORIENTATION_CHANGE: 'orientationChange',\n    SIZE_CHANGE: 'sizeChange'\n};\n\nexport class ViewPort extends EventNotifier {\n    public width: number;\n    public height: number;\n    public orientation: string;\n    public isMobileType = true;\n\n    constructor() {\n        super();\n        const dim = Dimensions.get('window');\n        this.width = dim.width;\n        this.height = dim.height;\n        this.orientation = this.width > this.height ? SCREEN_ORIENTATION.LANDSCAPE: SCREEN_ORIENTATION.PORTRAIT;\n        Dimensions.addEventListener('change', () => {\n            const dim = Dimensions.get('window');\n            const orientation = dim.width > dim.height ? SCREEN_ORIENTATION.LANDSCAPE: SCREEN_ORIENTATION.PORTRAIT;\n            this.notify(EVENTS.SIZE_CHANGE, [\n                {width: dim.width, height: dim.height}, \n                {width: this.width, height: this.height}\n            ]);\n            this.width = dim.width;\n            this.height = dim.height;\n            if (this.orientation != orientation) {\n                this.notify(EVENTS.ORIENTATION_CHANGE, [orientation, this.orientation]);\n                this.orientation = orientation;\n            }\n        });\n    }\n}\n\nexport default new ViewPort();"],"mappings":";;;AAAA,SAASA,UAAU,QAAQ,cAAc;AACzC,OAAOC,aAAa,MAAM,kBAAkB;AAG5C,OAAO,MAAMC,kBAAkB,GAAG;EAC9BC,SAAS,EAAE,WAAW;EACtBC,QAAQ,EAAE;AACd,CAAC;AAED,OAAO,MAAMC,MAAM,GAAG;EAClBC,kBAAkB,EAAE,mBAAmB;EACvCC,WAAW,EAAE;AACjB,CAAC;AAED,OAAO,MAAMC,QAAQ,SAASP,aAAa,CAAC;EAMxCQ,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;IAACC,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA,uBAHU,IAAI;IAItB,MAAMC,GAAG,GAAGX,UAAU,CAACY,GAAG,CAAC,QAAQ,CAAC;IACpC,IAAI,CAACC,KAAK,GAAGF,GAAG,CAACE,KAAK;IACtB,IAAI,CAACC,MAAM,GAAGH,GAAG,CAACG,MAAM;IACxB,IAAI,CAACC,WAAW,GAAG,IAAI,CAACF,KAAK,GAAG,IAAI,CAACC,MAAM,GAAGZ,kBAAkB,CAACC,SAAS,GAAED,kBAAkB,CAACE,QAAQ;IACvGJ,UAAU,CAACgB,gBAAgB,CAAC,QAAQ,EAAE,MAAM;MACxC,MAAML,GAAG,GAAGX,UAAU,CAACY,GAAG,CAAC,QAAQ,CAAC;MACpC,MAAMG,WAAW,GAAGJ,GAAG,CAACE,KAAK,GAAGF,GAAG,CAACG,MAAM,GAAGZ,kBAAkB,CAACC,SAAS,GAAED,kBAAkB,CAACE,QAAQ;MACtG,IAAI,CAACa,MAAM,CAACZ,MAAM,CAACE,WAAW,EAAE,CAC5B;QAACM,KAAK,EAAEF,GAAG,CAACE,KAAK;QAAEC,MAAM,EAAEH,GAAG,CAACG;MAAM,CAAC,EACtC;QAACD,KAAK,EAAE,IAAI,CAACA,KAAK;QAAEC,MAAM,EAAE,IAAI,CAACA;MAAM,CAAC,CAC3C,CAAC;MACF,IAAI,CAACD,KAAK,GAAGF,GAAG,CAACE,KAAK;MACtB,IAAI,CAACC,MAAM,GAAGH,GAAG,CAACG,MAAM;MACxB,IAAI,IAAI,CAACC,WAAW,IAAIA,WAAW,EAAE;QACjC,IAAI,CAACE,MAAM,CAACZ,MAAM,CAACC,kBAAkB,EAAE,CAACS,WAAW,EAAE,IAAI,CAACA,WAAW,CAAC,CAAC;QACvE,IAAI,CAACA,WAAW,GAAGA,WAAW;MAClC;IACJ,CAAC,CAAC;EACN;AACJ;AAEA,eAAe,IAAIP,QAAQ,CAAC,CAAC"}