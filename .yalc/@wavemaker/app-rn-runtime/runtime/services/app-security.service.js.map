{"version":3,"names":["Platform","axios","each","includes","networkService","injector","StorageService","WebProcessService","USER_ROLE","authCookieStr","XSRF_COOKIE_NAME","xsrf_header_name","AppSecurityService","constructor","_defineProperty","interceptors","request","use","config","onBeforeServiceCall","appConfig","getAppConfig","baseUrl","url","getXsrfToken","then","token","_config$url","startsWith","headers","Promise","resolve","getItem","xsrf_token","get","navigateToLandingPage","details","_this$appConfig$curre","_details$userInfo","currentPage","goToPage","userInfo","landingPage","appLogin","options","payload","formData","value","name","encodeURIComponent","defaults","withCredentials","post","baseURL","response","xsrfCookieValue","data","setItem","isLoggedIn","load","userData","getLoggedInUserDetails","useDefaultSuccessHandler","app","triggerStartUpVariables","isConnected","getServiceDefinitions","defaultSecurityConfig","loggedInUser","securityConfig","securityEnabled","authenticated","isAuthenticated","isSecurityEnabled","roles","userRoles","userName","id","userId","tenantId","userAttributes","dataSet","redirectToLogin","arguments","length","undefined","_this$securityConfig","loginConfig","type","authUrl","OS","window","parent","location","href","setTimeout","execute","output","JSON","parse","replace","reject","refresh","_this$securityConfig$","_this$appConfig$curre2","loginPage","pageName","appLogout","catch","canUserAccessPage","_this$securityConfig2","res","status","matchRoles","widgetRoles","some","item","hasAccessToWidget","_this$loggedInUser$da","_this$loggedInUser$da2","_this$loggedInUser$da3","_this$loggedInUser$da4","widgetRolesArr","split","EVERYONE","ANONYMOUS","AUTHENTICATED","appSecurityService"],"sources":["app-security.service.tsx"],"sourcesContent":["import { Platform } from 'react-native';\nimport axios, { InternalAxiosRequestConfig, AxiosResponse } from 'axios';\nimport { each, includes } from 'lodash';\n\nimport networkService from '@wavemaker/app-rn-runtime/core/network.service';\nimport injector from '@wavemaker/app-rn-runtime/core/injector';\nimport AppConfig from '@wavemaker/app-rn-runtime/core/AppConfig';\nimport StorageService from '@wavemaker/app-rn-runtime/core/storage.service';\nimport { SecurityService } from '@wavemaker/app-rn-runtime/core/security.service';\n\nimport WebProcessService from './webprocess.service';\n\ndeclare const window: any;\n\ninterface LoggedInUserConfig {\n    isAuthenticated: Boolean;\n    isSecurityEnabled: Boolean;\n    roles: Array<string>;\n    name: String;\n    id: String;\n    tenantId: String;\n    userAttributes: any;\n}\n\nenum USER_ROLE {\n    EVERYONE = 'Everyone',\n    ANONYMOUS = 'Anonymous',\n    AUTHENTICATED = 'Authenticated'\n}\n\nconst authCookieStr = 'AUTH_COOKIE';\nconst XSRF_COOKIE_NAME = 'wm_xsrf_token';\nconst xsrf_header_name = 'X-WM-XSRF-TOKEN';\n\nclass AppSecurityService implements SecurityService {\n\n    securityConfig: any;\n    isLoggedIn = false;\n    loggedInUser: any = {};\n    token: any;\n    appConfig: any;\n    baseUrl: string = '';\n    defaultSecurityConfig: any;\n\n    constructor() {\n      axios.interceptors.request.use((config: InternalAxiosRequestConfig) => this.onBeforeServiceCall(config));\n    }\n\n    onBeforeServiceCall(config: InternalAxiosRequestConfig) {\n      if (!this.appConfig) {\n        this.appConfig = this.getAppConfig();\n        this.baseUrl = this.appConfig.url;\n      }\n      return this.getXsrfToken().then((token: string) => {\n        if (config.url?.startsWith(this.baseUrl) && token) {\n          if(config.headers) config.headers[xsrf_header_name] = token;\n        }\n        return config\n      });\n    }\n\n    private getXsrfToken(): Promise<string> {\n      if (this.token) {\n        return Promise.resolve(this.token);\n      }\n      return StorageService.getItem(XSRF_COOKIE_NAME).then(xsrf_token => {\n        this.token = xsrf_token;\n        return this.token;\n      });\n    }\n\n    private getAppConfig() {\n      return injector.get<AppConfig>('APP_CONFIG');\n    }\n\n    public navigateToLandingPage(details: any) {\n      this.appConfig.currentPage?.goToPage(details.userInfo?.landingPage || 'Main', null, true);\n    }\n\n    public appLogin(options: any) {\n        // encode all parameters\n        let payload = '';\n        each(options.formData, function (value, name) {\n            payload += (payload ? '&' : '') + encodeURIComponent(name) + '=' + encodeURIComponent(value);\n        });\n        axios.defaults.withCredentials = true;\n        return axios.post(options.baseURL + '/j_spring_security_check', payload, {\n            withCredentials: true,\n            headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          }}).then((response: AxiosResponse) => {\n            const xsrfCookieValue = response.data ? response.data[XSRF_COOKIE_NAME] : '';\n            this.token = xsrfCookieValue;\n            StorageService.setItem(XSRF_COOKIE_NAME, xsrfCookieValue);\n            this.isLoggedIn = true;\n          }).then(() => this.load(options.baseURL))\n          .then(async () => {\n            const userData = await this.getLoggedInUserDetails(options.baseURL, options.useDefaultSuccessHandler);\n            await this.appConfig.app.triggerStartUpVariables();\n            return userData;\n          });\n    }\n\n    public load(baseURL: string) {\n      return Promise.resolve().then(() => {\n        if (networkService.isConnected()) {\n          return axios.get(baseURL + '/services/security/info')\n            .then((response: AxiosResponse) => response.data);\n        }\n        return this.appConfig.getServiceDefinitions(this.appConfig.url)\n          .then(() => Promise.resolve(this.defaultSecurityConfig));\n        }).then((details: any) => {\n          const loggedInUser = {} as LoggedInUserConfig;\n          this.securityConfig = details;\n          const appConfig = this.appConfig;\n          if (typeof details !== 'string' && (!details.securityEnabled || details.authenticated)) {\n              if (details.authenticated) {\n                  loggedInUser.isAuthenticated = details.authenticated;\n                  loggedInUser.isSecurityEnabled = details.authenticated;\n                  loggedInUser.roles           = details.userInfo.userRoles;\n                  loggedInUser.name            = details.userInfo.userName;\n                  loggedInUser.id              = details.userInfo.userId;\n                  loggedInUser.tenantId        = details.userInfo.tenantId;\n                  loggedInUser.userAttributes  = details.userInfo.userAttributes;\n                  appConfig.loggedInUser = loggedInUser;\n                  this.loggedInUser.dataSet = loggedInUser;\n              }\n              return appConfig.getServiceDefinitions(appConfig.url)\n              .then(() => {\n                return details;\n              });\n          } else {\n            return appConfig.getServiceDefinitions(appConfig.url)\n              .then(() => {\n                this.redirectToLogin();\n              });\n          }\n        });\n    }\n\n    private getLoggedInUserDetails(baseURL: string, useDefaultSuccessHandler: boolean = true) {\n        if (!baseURL) {\n            this.loggedInUser = {};\n            return Promise.resolve({});\n        }\n        return this.load(baseURL);\n    }\n\n    \n    public redirectToLogin() {\n      if (this.securityConfig?.loginConfig?.type  === 'SSO') {\n        const authUrl = this.appConfig.url  + '/services/security/ssologin';\n        if (Platform.OS === 'web') {\n          (window.parent || window).location.href = authUrl;\n        } else {\n          setTimeout(() => {\n            WebProcessService.execute('LOGIN', '/services/security/ssologin', false, true)\n            .then((output: any) => {\n              if (output) {\n                return JSON.parse(output.data && output.data.replace(/&quot;/g, \"\\\"\"));\n              }\n              return Promise.reject();\n            }).then((output: any) => {\n              if (output[XSRF_COOKIE_NAME]) {\n                this.token = output[XSRF_COOKIE_NAME];\n                StorageService.setItem(XSRF_COOKIE_NAME, output[XSRF_COOKIE_NAME]);\n              }\n            }).then(() => {\n              this.appConfig.refresh(true);\n            }).then(() => this.load(this.baseUrl)).then(() => {\n              return this.getLoggedInUserDetails(this.baseUrl);\n            });\n          }, 1000);\n        }\n      } else {\n        const loginPage = this.securityConfig.loginConfig?.pageName || 'Login';\n        injector.get<AppConfig>('APP_CONFIG').landingPage = loginPage;\n        this.appConfig.currentPage?.goToPage(loginPage, null, true);\n      }\n      this.appConfig.refresh();\n    }\n\n    public appLogout(options: any) {\n      return axios.post(options.baseURL + '/j_spring_security_logout', null, {\n          withCredentials: true\n      }).catch(() => {}).then(() => {\n          this.isLoggedIn = false;\n          this.redirectToLogin();\n      });\n    }\n\n    public canUserAccessPage(pageName: string) {\n      if (this.baseUrl && this.securityConfig?.isSecurityEnabled) {\n        return axios.get(this.baseUrl + `/pages/${pageName}/${pageName}.html`)\n          .catch((res) => res)\n          .then((res) => res.status === 200 || res.status === 304); \n      } else {\n        return Promise.resolve(true);\n      }\n    }\n\n    private matchRoles(widgetRoles: Array<String>, userRoles: Array<String>) {\n        return widgetRoles.some(function (item) {\n            return includes(userRoles, item);\n        });\n    }\n\n    public hasAccessToWidget(widgetRoles: String) {\n        const widgetRolesArr = widgetRoles.split(',');\n        // access the widget when 'Everyone' is chosen\n        if (includes(widgetRolesArr, USER_ROLE.EVERYONE)) {\n            return true;\n        }\n\n        // access the widget when 'Anonymous' is chosen and user is not authenticated\n        if (includes(widgetRolesArr, USER_ROLE.ANONYMOUS) && !this.loggedInUser.dataSet?.isAuthenticated) {\n            return true;\n        }\n\n        // access the widget when 'Only Authenticated Users' is chosen and user is authenticated\n        if (includes(widgetRolesArr, USER_ROLE.AUTHENTICATED) && this.loggedInUser.dataSet?.isAuthenticated) {\n            return true;\n        }\n\n        // access the widget when widget role and logged in user role matches\n        return this.loggedInUser.dataSet?.isAuthenticated && this.matchRoles(widgetRolesArr, this.loggedInUser.dataSet?.roles);\n    }\n}\n\nconst appSecurityService = new AppSecurityService();\n\nexport default appSecurityService;\n"],"mappings":"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"}