{"version":3,"names":["axios","React","Component","Dimensions","View","WmWebview","injector","AppDisplayManagerService","windowWidth","get","width","windowHeight","height","WebProcessWebViewProps","constructor","_defineProperty","WebProcessWebView","props","getScriptToInject","process","render","createElement","style","src","incognito","styles","root","onLoad","e","w","setTimeout","executeScript","then","output","onComplete","WebProcessService","execute","hookUrl","useSystemBrowser","arguments","length","undefined","baseUrl","url","withCredentials","response","executeWithSystemBrowser","data","executeWithInAppBrowser","processInfo","Promise","reject","resolve","destroyFn","show","content","encodeURIComponent","ouput","call"],"sources":["webprocess.service.tsx"],"sourcesContent":["import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Dimensions, View } from \"react-native\";\n\nimport WmWebview from \"@wavemaker/app-rn-runtime/components/advanced/webview/webview.component\";\nimport AppConfig from \"@wavemaker/app-rn-runtime/core/AppConfig\";\nimport injector from \"@wavemaker/app-rn-runtime/core/injector\";\n\nimport AppDisplayManagerService from \"./app-display-manager.service\";\n\ndeclare const window: any, document: any, alert: any;\n\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nclass WebProcessWebViewProps {\n    src: string = \"\";\n    process: string = \"\";\n    incognito = false;\n    onComplete?: (output: string) => any = null as any;\n}\n  \nclass WebProcessWebView extends Component<WebProcessWebViewProps> {\n\n    constructor(props: WebProcessWebViewProps) {\n      super(props);\n    }\n\n    private getScriptToInject(process: string): string {\n        return `(function() {\n            var elements = document.querySelectorAll('body.flex>a.link');\n            for (var i = 0; i < elements.length; i++) {\n                var href = elements[i].href;\n                if (href && href.indexOf('://services/webprocess/${process}?process_output=')) {\n                    return href.split('process_output=')[1];\n                }\n            }\n            window.isWebLoginProcess = true;\n        })()`;\n    }\n\n    render() {\n      return(\n        <View style={{\n          width: windowWidth,\n          height: windowHeight\n        }}>\n          <WmWebview src={this.props.src}\n            incognito={this.props.incognito}\n            styles={{\n            root: {\n              width: '100%',\n              height: '100%'\n            }\n          }}\n          onLoad={(e, w) => {\n            setTimeout(() => {\n              w.executeScript(this.getScriptToInject(this.props.process))\n              .then((output) => {\n                  if (output) {\n                    const onComplete = this.props.onComplete;\n                    onComplete && onComplete(output as string);\n                  }\n              });\n            }, 1000);\n          }}></WmWebview>\n        </View>\n      );\n    }\n}\n\nexport class WebProcessService {\n\n    baseUrl: string | null = null;\n\n    constructor() {}\n\n    public execute(process: string, hookUrl: string, useSystemBrowser = false, incognito = false): Promise<any> {\n        if (!this.baseUrl) {\n            this.baseUrl = injector.get<AppConfig>('APP_CONFIG').url;\n          }\n        return axios.get(this.baseUrl + `/services/webprocess/prepare?processName=${process}&hookUrl=${hookUrl}&requestSourceType=MOBILE`, {\n          withCredentials: true\n        })\n            .then((response) => {\n                if (useSystemBrowser) {\n                    return this.executeWithSystemBrowser(response.data);\n                } else {\n                    return this.executeWithInAppBrowser(response.data, process, incognito);\n                }\n            }).then(output => {\n                return axios.get(this.baseUrl + '/services/webprocess/decode?encodedProcessdata=' + output, {\n                  withCredentials: true\n                });\n            });\n    }\n\n    private executeWithSystemBrowser(processInfo: string): Promise<any> {\n        return Promise.reject('Web Process in System browser is nor ready yet');\n    }\n\n    private executeWithInAppBrowser(processInfo: string, process: string, incognito: boolean): Promise<any> {\n        return new Promise((resolve, reject) => {\n            let destroyFn = () => {};\n            destroyFn = AppDisplayManagerService.show({\n                content: (\n                  <WebProcessWebView \n                    src={this.baseUrl  + '/services/webprocess/start?process=' + encodeURIComponent(processInfo)}\n                    incognito={incognito}\n                    process={process}\n                    onComplete={(ouput) => {\n                      resolve(ouput);\n                      destroyFn.call(AppDisplayManagerService);\n                    }}></WebProcessWebView>\n                ),\n                \n              });\n        });\n    }\n}\n\nexport default new WebProcessService();"],"mappings":"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"}