{"version":3,"names":["Contacts","permissionManager","ContactsService","constructor","getContacts","params","Promise","resolve","reject","requestPermissions","then","getContactsAsync","fields","Fields","ID","Name","PhoneNumbers","name","contactFilter","value","contacts","data","forEach","c","_c$phoneNumbers","numbers","phoneNumbers","num","push","number","id","displayName"],"sources":["contacts-service.ts"],"sourcesContent":["import * as Contacts from 'expo-contacts';\nimport permissionManager from '@wavemaker/app-rn-runtime/runtime/services/device/permissions';\nimport { ContactsInput } from '@wavemaker/app-rn-runtime/core/device/contacts-service';\nimport { ContactsOutput, PhoneNumber} from \"@wavemaker/app-rn-runtime/variables/device/contacts/get-contacts.operation\";\n\nexport class ContactsService {\n\n  constructor() {}\n\n  public getContacts(params: ContactsInput): Promise<Array<ContactsOutput>> {\n    return new Promise((resolve, reject) => {\n      permissionManager.requestPermissions('contacts').then(() => {\n        return Contacts.getContactsAsync({\n          fields: [Contacts.Fields.ID, Contacts.Fields.Name, Contacts.Fields.PhoneNumbers],\n          name: params.contactFilter\n        }).then((value: Contacts.ContactResponse) => {\n          let contacts: any = [];\n          value.data.forEach((c: Contacts.Contact) => {\n            const numbers = [] as Array<PhoneNumber>;\n            c.phoneNumbers?.forEach((num: Contacts.PhoneNumber) => {\n              numbers.push({\n                value: num.number as string\n              });\n            });\n            contacts.push({\n              id: c.id,\n              displayName: c.name,\n              phoneNumbers: numbers\n            });\n          });\n          return resolve(contacts);\n        });\n      }, () => resolve([]));\n      });\n  }\n}\n"],"mappings":"AAAA,OAAO,KAAKA,QAAQ,MAAM,eAAe;AACzC,OAAOC,iBAAiB,MAAM,+DAA+D;AAI7F,OAAO,MAAMC,eAAe,CAAC;EAE3BC,WAAWA,CAAA,EAAG,CAAC;EAERC,WAAWA,CAACC,MAAqB,EAAkC;IACxE,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCP,iBAAiB,CAACQ,kBAAkB,CAAC,UAAU,CAAC,CAACC,IAAI,CAAC,MAAM;QAC1D,OAAOV,QAAQ,CAACW,gBAAgB,CAAC;UAC/BC,MAAM,EAAE,CAACZ,QAAQ,CAACa,MAAM,CAACC,EAAE,EAAEd,QAAQ,CAACa,MAAM,CAACE,IAAI,EAAEf,QAAQ,CAACa,MAAM,CAACG,YAAY,CAAC;UAChFC,IAAI,EAAEZ,MAAM,CAACa;QACf,CAAC,CAAC,CAACR,IAAI,CAAES,KAA+B,IAAK;UAC3C,IAAIC,QAAa,GAAG,EAAE;UACtBD,KAAK,CAACE,IAAI,CAACC,OAAO,CAAEC,CAAmB,IAAK;YAAA,IAAAC,eAAA;YAC1C,MAAMC,OAAO,GAAG,EAAwB;YACxC,CAAAD,eAAA,GAAAD,CAAC,CAACG,YAAY,cAAAF,eAAA,uBAAdA,eAAA,CAAgBF,OAAO,CAAEK,GAAyB,IAAK;cACrDF,OAAO,CAACG,IAAI,CAAC;gBACXT,KAAK,EAAEQ,GAAG,CAACE;cACb,CAAC,CAAC;YACJ,CAAC,CAAC;YACFT,QAAQ,CAACQ,IAAI,CAAC;cACZE,EAAE,EAAEP,CAAC,CAACO,EAAE;cACRC,WAAW,EAAER,CAAC,CAACN,IAAI;cACnBS,YAAY,EAAED;YAChB,CAAC,CAAC;UACJ,CAAC,CAAC;UACF,OAAOlB,OAAO,CAACa,QAAQ,CAAC;QAC1B,CAAC,CAAC;MACJ,CAAC,EAAE,MAAMb,OAAO,CAAC,EAAE,CAAC,CAAC;IACrB,CAAC,CAAC;EACN;AACF"}