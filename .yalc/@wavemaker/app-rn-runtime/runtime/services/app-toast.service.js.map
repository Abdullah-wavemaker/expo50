{"version":3,"names":["injector","AppToastService","constructor","_defineProperty","getAppConfig","appConfig","get","refresh","refreshCount","showToast","options","i","toastsOpened","findIndex","o","name","timeout","elevationIndex","length","app","modalsOpened","push","hideOnClick","cb","onClick","hideToast","clearTimeout","duration","setTimeout","splice","onClose","appToastService"],"sources":["app-toast.service.tsx"],"sourcesContent":["import injector from '@wavemaker/app-rn-runtime/core/injector';\nimport AppConfig from '@wavemaker/app-rn-runtime/core/AppConfig';\nimport { ToastOptions, ToastService } from '@wavemaker/app-rn-runtime/core/toast.service';\n\nclass AppToastService implements ToastService {\n\n    public toastsOpened = [] as ToastOptions[];\n    public appConfig: any;\n    public refreshCount = 0;\n\n    private getAppConfig() {\n      if (!this.appConfig) {\n        this.appConfig = injector.get<AppConfig>('APP_CONFIG');\n      }\n      return this.appConfig;\n    }\n    \n    refresh() {\n      this.refreshCount++;\n      this.appConfig.refresh();\n    }\n\n    public showToast(options: ToastOptions) {\n        const i = this.toastsOpened.findIndex(o => o.name === options.name);\n        let timeout: any;\n        this.refreshCount++;\n        if (i < 0) {\n          options.elevationIndex = this.toastsOpened.length + this.getAppConfig().app.modalsOpened + 1;\n          this.toastsOpened.push(options);\n            // hide the toast when toaster is clicked\n            if (options.hideOnClick) {\n              let cb = options.onClick;\n              options.onClick = () => {\n                cb && cb();\n                this.hideToast(options);\n                clearTimeout(timeout);\n              }\n            }\n            if (options.duration) {\n              timeout = setTimeout(() => {\n                    this.hideToast(options);\n                }, options.duration);\n            }\n        }\n        this.refresh();\n    }\n\n    public hideToast(options?: ToastOptions) {\n        const i = options ? this.toastsOpened.findIndex(o => o.name === options.name) : (this.toastsOpened.length - 1);\n        if (i >= 0) {\n            const o = this.toastsOpened.splice(i, 1)[0];\n            this.refresh();\n            options?.onClose && options.onClose();\n        }\n    }\n}\n\nconst appToastService = new AppToastService();\n\nexport default appToastService;\n"],"mappings":";;;AAAA,OAAOA,QAAQ,MAAM,yCAAyC;AAI9D,MAAMC,eAAe,CAAyB;EAAAC,YAAA;IAAAC,eAAA,uBAEpB,EAAE;IAAAA,eAAA;IAAAA,eAAA,uBAEF,CAAC;EAAA;EAEfC,YAAYA,CAAA,EAAG;IACrB,IAAI,CAAC,IAAI,CAACC,SAAS,EAAE;MACnB,IAAI,CAACA,SAAS,GAAGL,QAAQ,CAACM,GAAG,CAAY,YAAY,CAAC;IACxD;IACA,OAAO,IAAI,CAACD,SAAS;EACvB;EAEAE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,YAAY,EAAE;IACnB,IAAI,CAACH,SAAS,CAACE,OAAO,CAAC,CAAC;EAC1B;EAEOE,SAASA,CAACC,OAAqB,EAAE;IACpC,MAAMC,CAAC,GAAG,IAAI,CAACC,YAAY,CAACC,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKL,OAAO,CAACK,IAAI,CAAC;IACnE,IAAIC,OAAY;IAChB,IAAI,CAACR,YAAY,EAAE;IACnB,IAAIG,CAAC,GAAG,CAAC,EAAE;MACTD,OAAO,CAACO,cAAc,GAAG,IAAI,CAACL,YAAY,CAACM,MAAM,GAAG,IAAI,CAACd,YAAY,CAAC,CAAC,CAACe,GAAG,CAACC,YAAY,GAAG,CAAC;MAC5F,IAAI,CAACR,YAAY,CAACS,IAAI,CAACX,OAAO,CAAC;MAC7B;MACA,IAAIA,OAAO,CAACY,WAAW,EAAE;QACvB,IAAIC,EAAE,GAAGb,OAAO,CAACc,OAAO;QACxBd,OAAO,CAACc,OAAO,GAAG,MAAM;UACtBD,EAAE,IAAIA,EAAE,CAAC,CAAC;UACV,IAAI,CAACE,SAAS,CAACf,OAAO,CAAC;UACvBgB,YAAY,CAACV,OAAO,CAAC;QACvB,CAAC;MACH;MACA,IAAIN,OAAO,CAACiB,QAAQ,EAAE;QACpBX,OAAO,GAAGY,UAAU,CAAC,MAAM;UACrB,IAAI,CAACH,SAAS,CAACf,OAAO,CAAC;QAC3B,CAAC,EAAEA,OAAO,CAACiB,QAAQ,CAAC;MACxB;IACJ;IACA,IAAI,CAACpB,OAAO,CAAC,CAAC;EAClB;EAEOkB,SAASA,CAACf,OAAsB,EAAE;IACrC,MAAMC,CAAC,GAAGD,OAAO,GAAG,IAAI,CAACE,YAAY,CAACC,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKL,OAAO,CAACK,IAAI,CAAC,GAAI,IAAI,CAACH,YAAY,CAACM,MAAM,GAAG,CAAE;IAC9G,IAAIP,CAAC,IAAI,CAAC,EAAE;MACR,MAAMG,CAAC,GAAG,IAAI,CAACF,YAAY,CAACiB,MAAM,CAAClB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3C,IAAI,CAACJ,OAAO,CAAC,CAAC;MACd,CAAAG,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEoB,OAAO,KAAIpB,OAAO,CAACoB,OAAO,CAAC,CAAC;IACzC;EACJ;AACJ;AAEA,MAAMC,eAAe,GAAG,IAAI9B,eAAe,CAAC,CAAC;AAE7C,eAAe8B,eAAe"}