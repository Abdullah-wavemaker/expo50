{"version":3,"names":["axios","StorageService","isWebPreviewMode","I18nManager","APP_LOCALE_ROOT_PATH","STORAGE_KEY","RTL_LANGUAGE_CODES","map","forEach","v","AppI18nService","constructor","_defineProperty","init","selectedLocale","getItem","isRTLLocale","newLocale","arguments","length","undefined","setRTL","locale","flag","needsRestart","isRTL","forceRTL","loadAppLocaleBundle","url","Promise","resolve","then","path","get","bundle","dateFormat","data","formats","date","timeFormat","time","currencyCode","currency","dateTimeFormat","catch","console","warn","setTimezone","timezone","getTimezone","setSelectedLocale","setItem","getSelectedLocale","i18nService"],"sources":["app-i18n.service.tsx"],"sourcesContent":["import axios, { AxiosResponse } from 'axios';\nimport StorageService from '@wavemaker/app-rn-runtime/core/storage.service';\nimport { isWebPreviewMode } from '@wavemaker/app-rn-runtime/core/utils';\nimport { I18nManager, Platform } from 'react-native';\nimport { I18nService } from '@wavemaker/app-rn-runtime/core/i18n.service';\n\nconst APP_LOCALE_ROOT_PATH = '/resources/i18n';\nconst STORAGE_KEY = 'selectedLocale';\nconst RTL_LANGUAGE_CODES = (()=>{\n  const map = {} as any;\n  [\"ar\", \"ar-001\", \"ar-ae\", \"ar-bh\", \"ar-dz\", \"ar-eg\", \"ar-iq\", \"ar-jo\", \"ar-kw\", \"ar-lb\",\n   \"ar-ly\", \"ar-ma\", \"ar-om\", \"ar-qa\", \"ar-sa\", \"ar-sd\", \"ar-sy\", \"ar-tn\", \"ar-ye\", \"arc\",\n    \"bcc\", \"bqi\", \"ckb\", \"dv\", \"fa\", \"glk\", \"he\", \"ku\", \"mzn\", \"pnb\", \"ps\", \"sd\", \"ug\", \"ur\", \"yi\"].forEach(v=>{\n      map[v] = true;\n    });\n    return map;\n  })();\n\nclass AppI18nService implements I18nService{\n    appLocale: any;\n    defaultSupportedLocale = 'en';\n    selectedLocale: any;\n    dateFormat: string = '';\n    timeFormat: string = '';\n    dateTimeFormat: string = '';\n    currencyCode: string = '';\n    timezone: string = '';\n\n    constructor() {}\n\n    async init() {\n      this.selectedLocale = await StorageService.getItem(STORAGE_KEY);\n    }\n\n    isRTLLocale(newLocale: string = this.selectedLocale){\n      return !!(newLocale && RTL_LANGUAGE_CODES[newLocale]);\n    }\n\n    setRTL(locale?: string){\n      const flag = this.isRTLLocale(locale);\n      const needsRestart = !isWebPreviewMode() && I18nManager.isRTL !== flag;\n      I18nManager.forceRTL(flag);\n      return needsRestart; \n    }\n\n    loadAppLocaleBundle(url: string) {\n        return Promise.resolve().then(() => {\n          const path = `${url + APP_LOCALE_ROOT_PATH}/${this.selectedLocale}.json`;\n          return axios.get(path)\n            .then((bundle) => {\n              this.dateFormat = bundle.data.formats.date;\n              this.timeFormat = bundle.data.formats.time;\n              this.currencyCode = bundle.data.formats.currency;\n              this.dateTimeFormat = this.dateFormat + ' ' + this.timeFormat;\n              return bundle;\n            })\n            .catch(() => {\n              console.warn(`error loading locale resource from ${path}`);\n            });\n\n        });\n    }\n\n    setTimezone(timezone: string){\n      this.timezone = timezone;\n    }\n\n    getTimezone(){\n      return this.timezone;\n    }\n\n    setSelectedLocale(locale: string) {\n        this.selectedLocale = locale;\n        StorageService.setItem(STORAGE_KEY, locale);\n        return this.setRTL(locale);\n    }\n\n    getSelectedLocale() {\n      return this.selectedLocale;\n    }\n}\n\nconst i18nService = new AppI18nService();\n\nexport default i18nService;\n"],"mappings":"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"}