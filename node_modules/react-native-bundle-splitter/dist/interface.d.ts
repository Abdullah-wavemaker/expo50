/// <reference types="react-native" />
import * as React from 'react';
declare type ImportReturnType = {};
export declare type RequireLoader = () => NodeRequire;
export declare type ImportLoader = () => Promise<ImportReturnType>;
declare type BasePreLoadable = {
    require?: RequireLoader;
    loader?: ImportLoader;
    name?: string;
    group?: string;
    static?: object;
};
declare type RequireOnlyOne<T, Keys extends keyof T = keyof T> = Pick<T, Exclude<keyof T, Keys>> & {
    [K in Keys]-?: Required<Pick<T, K>> & Partial<Record<Exclude<Keys, K>, undefined>>;
}[Keys];
export declare type PreLoadable = RequireOnlyOne<BasePreLoadable, 'require' | 'loader'>;
export declare type EnhancedPreLoadable = {
    cached: boolean;
    placeholder: React.ElementType | null;
    extract: string;
};
export declare type Component = PreLoadable & EnhancedPreLoadable & {
    name: string;
};
export {};
